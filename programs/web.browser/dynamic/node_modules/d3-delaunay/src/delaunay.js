function module(t,e,n){let l,i,r,o;n.export({default:()=>d}),n.link("delaunator",{default(t){l=t}},0),n.link("./path.js",{default(t){i=t}},1),n.link("./polygon.js",{default(t){r=t}},2),n.link("./voronoi.js",{default(t){o=t}},3);const s=2*Math.PI;function h(t){return t[0]}function a(t){return t[1]}function u(t){const{triangles:e,coords:n}=t;for(let l=0;l<e.length;l+=3){const t=2*e[l],i=2*e[l+1],r=2*e[l+2],o=(n[r]-n[t])*(n[i+1]-n[t+1])-(n[i]-n[t])*(n[r+1]-n[t+1]);if(o>1e-10)return!1}return!0}function c(t,e,n){return[t+Math.sin(t+e)*n,e+Math.cos(t-e)*n]}class d{static from(t,e=h,n=a,l){return new d("length"in t?g(t,e,n,l):Float64Array.from(f(t,e,n,l)))}constructor(t){this._delaunator=new l(t),this.inedges=new Int32Array(t.length/2),this._hullIndex=new Int32Array(t.length/2),this.points=this._delaunator.coords,this._init()}update(){return this._delaunator.update(),this._init(),this}_init(){const t=this._delaunator,e=this.points;if(t.hull&&t.hull.length>2&&u(t)){this.collinear=Int32Array.from({length:e.length/2},(t,e)=>e).sort((t,n)=>e[2*t]-e[2*n]||e[2*t+1]-e[2*n+1]);const t=this.collinear[0],n=this.collinear[this.collinear.length-1],i=[e[2*t],e[2*t+1],e[2*n],e[2*n+1]],r=1e-8*Math.sqrt((i[3]-i[1])**2+(i[2]-i[0])**2);for(let l=0,o=e.length/2;l<o;++l){const t=c(e[2*l],e[2*l+1],r);e[2*l]=t[0],e[2*l+1]=t[1]}this._delaunator=new l(e)}else delete this.collinear;const n=this.halfedges=this._delaunator.halfedges,i=this.hull=this._delaunator.hull,r=this.triangles=this._delaunator.triangles,o=this.inedges.fill(-1),s=this._hullIndex.fill(-1);for(let l=0,h=n.length;l<h;++l){const t=r[l%3==2?l-2:l+1];-1!==n[l]&&-1!==o[t]||(o[t]=l)}for(let l=0,h=i.length;l<h;++l)s[i[l]]=l;i.length<=2&&i.length>0&&(this.triangles=new Int32Array(3).fill(-1),this.halfedges=new Int32Array(3).fill(-1),this.triangles[0]=i[0],this.triangles[1]=i[1],this.triangles[2]=i[1],o[i[0]]=1,2===i.length&&(o[i[1]]=0))}voronoi(t){return new o(this,t)}*neighbors(t){const{inedges:e,hull:n,_hullIndex:l,halfedges:i,triangles:r,collinear:o}=this;if(o){const e=o.indexOf(t);return e>0&&(yield o[e-1]),void(e<o.length-1&&(yield o[e+1]))}const s=e[t];if(-1===s)return;let h=s,a=-1;do{if(yield a=r[h],r[h=h%3==2?h-2:h+1]!==t)return;if(-1===(h=i[h])){const e=n[(l[t]+1)%n.length];return void(e!==a&&(yield e))}}while(h!==s)}find(t,e,n=0){if((t=+t)!=t||(e=+e)!=e)return-1;const l=n;let i;for(;(i=this._step(n,t,e))>=0&&i!==n&&i!==l;)n=i;return i}_step(t,e,n){const{inedges:l,hull:i,_hullIndex:r,halfedges:o,triangles:s,points:h}=this;if(-1===l[t]||!h.length)return(t+1)%(h.length>>1);let a=t,u=(e-h[2*t])**2+(n-h[2*t+1])**2;const c=l[t];let d=c;do{let l=s[d];const c=(e-h[2*l])**2+(n-h[2*l+1])**2;if(c<u&&(u=c,a=l),s[d=d%3==2?d-2:d+1]!==t)break;if(-1===(d=o[d])){if((d=i[(r[t]+1)%i.length])!==l&&(e-h[2*d])**2+(n-h[2*d+1])**2<u)return d;break}}while(d!==c);return a}render(t){const e=null==t?t=new i:void 0,{points:n,halfedges:l,triangles:r}=this;for(let i=0,o=l.length;i<o;++i){const e=l[i];if(e<i)continue;const o=2*r[i],s=2*r[e];t.moveTo(n[o],n[o+1]),t.lineTo(n[s],n[s+1])}return this.renderHull(t),e&&e.value()}renderPoints(t,e=2){const n=null==t?t=new i:void 0,{points:l}=this;for(let i=0,r=l.length;i<r;i+=2){const n=l[i],r=l[i+1];t.moveTo(n+e,r),t.arc(n,r,e,0,s)}return n&&n.value()}renderHull(t){const e=null==t?t=new i:void 0,{hull:n,points:l}=this,r=2*n[0],o=n.length;t.moveTo(l[r],l[r+1]);for(let i=1;i<o;++i){const e=2*n[i];t.lineTo(l[e],l[e+1])}return t.closePath(),e&&e.value()}hullPolygon(){const t=new r;return this.renderHull(t),t.value()}renderTriangle(t,e){const n=null==e?e=new i:void 0,{points:l,triangles:r}=this,o=2*r[t*=3],s=2*r[t+1],h=2*r[t+2];return e.moveTo(l[o],l[o+1]),e.lineTo(l[s],l[s+1]),e.lineTo(l[h],l[h+1]),e.closePath(),n&&n.value()}*trianglePolygons(){const{triangles:t}=this;for(let e=0,n=t.length/3;e<n;++e)yield this.trianglePolygon(e)}trianglePolygon(t){const e=new r;return this.renderTriangle(t,e),e.value()}}function g(t,e,n,l){const i=t.length,r=new Float64Array(2*i);for(let o=0;o<i;++o){const i=t[o];r[2*o]=e.call(l,i,o,t),r[2*o+1]=n.call(l,i,o,t)}return r}function*f(t,e,n,l){let i=0;for(const r of t)yield e.call(l,r,i,t),yield n.call(l,r,i,t),++i}}

