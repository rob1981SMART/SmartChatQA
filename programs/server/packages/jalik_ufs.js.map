{"version":3,"sources":["meteor://ðŸ’»app/packages/jalik:ufs/ufs.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-config.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-filter.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-methods.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-mime.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-server.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-store-permissions.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-store.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-tokens.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-uploader.js"],"names":["module1","export","UploadFS","Meteor","link","v","Random","Config","Filter","MIME","Store","StorePermissions","Tokens","Uploader","stores","store","tokens","addETagAttributeToFiles","where","getStores","forEach","files","getCollection","find","etag","fields","_id","file","direct","update","$set","generateEtag","addMimeType","extension","mime","toLowerCase","addPathAttributeToFiles","path","getFileRelativeURL","addStore","TypeError","getName","id","getMimeType","getMimeTypes","getStore","name","getTempFilePath","fileId","config","tmpDir","importFromURL","url","callback","call","readAsArrayBuffer","event","console","error","selectFile","input","document","createElement","type","multiple","onchange","ev","target","div","className","style","appendChild","body","click","selectFiles","i","length","isServer","require","global","isClient","window","module","_","constructor","options","extend","defaultStorePermissions","https","simulateReadDelay","simulateUploadSpeed","simulateWriteDelay","storesPath","tmpDirPermissions","parseInt","self","contentTypes","extensions","minSize","maxSize","invalidFileError","Error","fileTooSmallError","fileSize","minFileSize","fileTooLargeError","maxFileSize","invalidFileExtension","fileExtension","allowedExtensions","invalidFileType","fileType","allowedContentTypes","onCheck","Array","method","check","size","getMinSize","getMaxSize","getExtensions","includes","getContentTypes","fileTypes","isContentTypeInList","list","wildCardGlob","wildcards","filter","item","indexOf","replace","isValid","result","err","fs","Npm","http","Future","methods","ufsComplete","storeName","token","String","checkToken","fut","tmpFile","removeTempFile","unlink","message","findOne","validate","rs","createReadStream","flags","encoding","autoClose","on","bindEnvironment","remove","throw","write","return","wait","ufsCreate","Object","complete","uploading","substr","lastIndexOf","progress","userId","getFilter","create","createToken","uploadUrl","getURL","ufsDelete","count","ufsImportURL","split","pop","originalUrl","warn","proto","test","unblock","get","res","ufsStop","WebApp","SparkMD5","default","domain","mkdirp","stream","URL","zlib","startup","mode","stat","log","chmod","d","connectHandlers","use","req","next","parsedUrl","parse","pathname","allowCORS","setHeader","regExp","RegExp","match","exec","writeHead","end","query","unique","hash","originalId","$ne","spark","ArrayBuffer","ws","createWriteStream","parseFloat","isNaN","Math","min","chunk","append","onRead","undefined","index","_sleepForMs","run","status","headers","modifiedAt","Date","toUTCString","uploadedAt","modifiedSince","range","total","unit","ranges","r","start","getReadStream","PassThrough","onReadError","emit","transformRead","accept","pipe","createGzip","createDeflate","insert","actions","action","modifiers","checkInsert","checkRemove","checkUpdate","_objectWithoutProperties","Mongo","collection","onCopyError","onFinishUpload","onValidate","onWriteError","permissions","transformWrite","Collection","value","copy","originalStore","copyId","generateToken","createdAt","errorHandler","finishHandler","readStream","data","getFileURL","copyTo","getWriteStream","after","before","delete","pattern","c","random","s","toString","round","toUpperCase","getRelativeURL","rootUrl","absoluteUrl","rootPath","trim","encodeURI","secure","request","response","setPermissions","writeStream","adaptive","capacity","chunkSize","maxChunkSize","maxTries","onAbort","onComplete","onCreate","onError","onProgress","onStart","onStop","retryDelay","transferDelay","RangeError","Blob","File","capacityMargin","offset","loaded","tries","postUrl","timeA","timeB","elapsedTime","startTime","finish","uploadedFile","abort","getAverageSpeed","seconds","getElapsedTime","getLoaded","isUploading","now","getFile","getProgress","getRemainingTime","averageSpeed","remainingBytes","max","getSpeed","getTotal","isComplete","readChunk","slice","setTimeout","sendChunk","duration","abs","xhr","XMLHttpRequest","onreadystatechange","readyState","open","send","stop"],"mappings":"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","file":"/packages/jalik_ufs.js","sourcesContent":["/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\nimport { Meteor } from 'meteor/meteor';\r\nimport { Random } from 'meteor/random';\r\nimport { Config } from './ufs-config';\r\nimport { Filter } from './ufs-filter';\r\nimport { MIME } from './ufs-mime';\r\nimport { Store } from './ufs-store';\r\nimport { StorePermissions } from './ufs-store-permissions';\r\nimport { Tokens } from './ufs-tokens';\r\nimport { Uploader } from './ufs-uploader';\r\n\r\nlet stores = {};\r\n\r\nexport const UploadFS = {\r\n\r\n  /**\r\n   * Contains all stores\r\n   */\r\n  store: {},\r\n\r\n  /**\r\n   * Collection of tokens\r\n   */\r\n  tokens: Tokens,\r\n\r\n  /**\r\n   * Adds the \"etag\" attribute to files\r\n   * @param where\r\n   */\r\n  addETagAttributeToFiles(where) {\r\n    this.getStores().forEach((store) => {\r\n      const files = store.getCollection();\r\n\r\n      // By default update only files with no path set\r\n      files.find(where || { etag: null }, { fields: { _id: 1 } }).forEach((file) => {\r\n        files.direct.update(file._id, { $set: { etag: this.generateEtag() } });\r\n      });\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Adds the MIME type for an extension\r\n   * @param extension\r\n   * @param mime\r\n   */\r\n  addMimeType(extension, mime) {\r\n    MIME[extension.toLowerCase()] = mime;\r\n  },\r\n\r\n  /**\r\n   * Adds the \"path\" attribute to files\r\n   * @param where\r\n   */\r\n  addPathAttributeToFiles(where) {\r\n    this.getStores().forEach((store) => {\r\n      const files = store.getCollection();\r\n\r\n      // By default update only files with no path set\r\n      files.find(where || { path: null }, { fields: { _id: 1 } }).forEach((file) => {\r\n        files.direct.update(file._id, { $set: { path: store.getFileRelativeURL(file._id) } });\r\n      });\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Registers the store\r\n   * @param store\r\n   */\r\n  addStore(store) {\r\n    if (!(store instanceof Store)) {\r\n      throw new TypeError(`ufs: store is not an instance of UploadFS.Store.`);\r\n    }\r\n    stores[store.getName()] = store;\r\n  },\r\n\r\n  /**\r\n   * Generates a unique ETag\r\n   * @return {string}\r\n   */\r\n  generateEtag() {\r\n    return Random.id();\r\n  },\r\n\r\n  /**\r\n   * Returns the MIME type of the extension\r\n   * @param extension\r\n   * @returns {*}\r\n   */\r\n  getMimeType(extension) {\r\n    extension = extension.toLowerCase();\r\n    return MIME[extension];\r\n  },\r\n\r\n  /**\r\n   * Returns all MIME types\r\n   */\r\n  getMimeTypes() {\r\n    return MIME;\r\n  },\r\n\r\n  /**\r\n   * Returns the store by its name\r\n   * @param name\r\n   * @return {UploadFS.Store}\r\n   */\r\n  getStore(name) {\r\n    return stores[name];\r\n  },\r\n\r\n  /**\r\n   * Returns all stores\r\n   * @return {object}\r\n   */\r\n  getStores() {\r\n    return stores;\r\n  },\r\n\r\n  /**\r\n   * Returns the temporary file path\r\n   * @param fileId\r\n   * @return {string}\r\n   */\r\n  getTempFilePath(fileId) {\r\n    return `${this.config.tmpDir}/${fileId}`;\r\n  },\r\n\r\n  /**\r\n   * Imports a file from a URL\r\n   * @param url\r\n   * @param file\r\n   * @param store\r\n   * @param callback\r\n   */\r\n  importFromURL(url, file, store, callback) {\r\n    if (typeof store === 'string') {\r\n      Meteor.call('ufsImportURL', url, file, store, callback);\r\n    } else if (typeof store === 'object') {\r\n      store.importFromURL(url, file, callback);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Returns file and data as ArrayBuffer for each files in the event\r\n   * @deprecated\r\n   * @param event\r\n   * @param callback\r\n   */\r\n  readAsArrayBuffer(event, callback) {\r\n    console.error('UploadFS.readAsArrayBuffer is deprecated, see https://github.com/jalik/jalik-ufs#uploading-from-a-file');\r\n  },\r\n\r\n  /**\r\n   * Opens a dialog to select a single file\r\n   * @param callback\r\n   */\r\n  selectFile(callback) {\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n    input.multiple = false;\r\n    input.onchange = (ev) => {\r\n      let files = ev.target.files;\r\n      callback.call(UploadFS, files[0]);\r\n    };\r\n    // Fix for iOS/Safari\r\n    const div = document.createElement('div');\r\n    div.className = 'ufs-file-selector';\r\n    div.style = 'display:none; height:0; width:0; overflow: hidden;';\r\n    div.appendChild(input);\r\n    document.body.appendChild(div);\r\n    // Trigger file selection\r\n    input.click();\r\n  },\r\n\r\n  /**\r\n   * Opens a dialog to select multiple files\r\n   * @param callback\r\n   */\r\n  selectFiles(callback) {\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n    input.multiple = true;\r\n    input.onchange = (ev) => {\r\n      const files = ev.target.files;\r\n\r\n      for (let i = 0; i < files.length; i += 1) {\r\n        callback.call(UploadFS, files[i]);\r\n      }\r\n    };\r\n    // Fix for iOS/Safari\r\n    const div = document.createElement('div');\r\n    div.className = 'ufs-file-selector';\r\n    div.style = 'display:none; height:0; width:0; overflow: hidden;';\r\n    div.appendChild(input);\r\n    document.body.appendChild(div);\r\n    // Trigger file selection\r\n    input.click();\r\n  },\r\n};\r\n\r\nif (Meteor.isServer) {\r\n  require('./ufs-methods');\r\n  require('./ufs-server');\r\n}\r\n\r\n/**\r\n * UploadFS Configuration\r\n * @type {Config}\r\n */\r\nUploadFS.config = new Config();\r\n\r\n// Add classes to global namespace\r\nUploadFS.Config = Config;\r\nUploadFS.Filter = Filter;\r\nUploadFS.Store = Store;\r\nUploadFS.StorePermissions = StorePermissions;\r\nUploadFS.Uploader = Uploader;\r\n\r\nif (Meteor.isServer) {\r\n  // Expose the module globally\r\n  if (typeof global !== 'undefined') {\r\n    global['UploadFS'] = UploadFS;\r\n  }\r\n} else if (Meteor.isClient) {\r\n  // Expose the module globally\r\n  if (typeof window !== 'undefined') {\r\n    window.UploadFS = UploadFS;\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport { _ } from 'meteor/underscore';\r\nimport { StorePermissions } from './ufs-store-permissions';\r\n\r\n/**\r\n * UploadFS configuration\r\n */\r\nexport class Config {\r\n\r\n  constructor(options) {\r\n    // Default options\r\n    options = _.extend({\r\n      defaultStorePermissions: null,\r\n      https: false,\r\n      simulateReadDelay: 0,\r\n      simulateUploadSpeed: 0,\r\n      simulateWriteDelay: 0,\r\n      storesPath: 'ufs',\r\n      tmpDir: '/tmp/ufs',\r\n      tmpDirPermissions: '0700',\r\n    }, options);\r\n\r\n    // Check options\r\n    if (options.defaultStorePermissions && !(options.defaultStorePermissions instanceof StorePermissions)) {\r\n      throw new TypeError('Config: defaultStorePermissions is not an instance of StorePermissions');\r\n    }\r\n    if (typeof options.https !== 'boolean') {\r\n      throw new TypeError('Config: https is not a function');\r\n    }\r\n    if (typeof options.simulateReadDelay !== 'number') {\r\n      throw new TypeError('Config: simulateReadDelay is not a number');\r\n    }\r\n    if (typeof options.simulateUploadSpeed !== 'number') {\r\n      throw new TypeError('Config: simulateUploadSpeed is not a number');\r\n    }\r\n    if (typeof options.simulateWriteDelay !== 'number') {\r\n      throw new TypeError('Config: simulateWriteDelay is not a number');\r\n    }\r\n    if (typeof options.storesPath !== 'string') {\r\n      throw new TypeError('Config: storesPath is not a string');\r\n    }\r\n    if (typeof options.tmpDir !== 'string') {\r\n      throw new TypeError('Config: tmpDir is not a string');\r\n    }\r\n    if (typeof options.tmpDirPermissions !== 'string') {\r\n      throw new TypeError('Config: tmpDirPermissions is not a string');\r\n    }\r\n\r\n    /**\r\n     * Default store permissions\r\n     * @type {UploadFS.StorePermissions}\r\n     */\r\n    this.defaultStorePermissions = options.defaultStorePermissions;\r\n    /**\r\n     * Use or not secured protocol in URLS\r\n     * @type {boolean}\r\n     */\r\n    this.https = options.https;\r\n    /**\r\n     * The simulation read delay\r\n     * @type {Number}\r\n     */\r\n    this.simulateReadDelay = parseInt(options.simulateReadDelay);\r\n    /**\r\n     * The simulation upload speed\r\n     * @type {Number}\r\n     */\r\n    this.simulateUploadSpeed = parseInt(options.simulateUploadSpeed);\r\n    /**\r\n     * The simulation write delay\r\n     * @type {Number}\r\n     */\r\n    this.simulateWriteDelay = parseInt(options.simulateWriteDelay);\r\n    /**\r\n     * The URL root path of stores\r\n     * @type {string}\r\n     */\r\n    this.storesPath = options.storesPath;\r\n    /**\r\n     * The temporary directory of uploading files\r\n     * @type {string}\r\n     */\r\n    this.tmpDir = options.tmpDir;\r\n    /**\r\n     * The permissions of the temporary directory\r\n     * @type {string}\r\n     */\r\n    this.tmpDirPermissions = options.tmpDirPermissions;\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\nimport { Meteor } from 'meteor/meteor';\r\nimport { _ } from 'meteor/underscore';\r\n\r\n/**\r\n * File filter\r\n */\r\nexport class Filter {\r\n\r\n  constructor(options) {\r\n    const self = this;\r\n\r\n    // Default options\r\n    options = _.extend({\r\n      contentTypes: null,\r\n      extensions: null,\r\n      minSize: 1,\r\n      maxSize: 0,\r\n      invalidFileError: () => new Meteor.Error('invalid-file', 'File is not valid'),\r\n      fileTooSmallError: (fileSize, minFileSize) => new Meteor.Error('file-too-small', `File size (size = ${fileSize}) is too small (min = ${minFileSize})`),\r\n      fileTooLargeError: (fileSize, maxFileSize) => new Meteor.Error('file-too-large', `File size (size = ${fileSize}) is too large (max = ${maxFileSize})`),\r\n      invalidFileExtension: (fileExtension, allowedExtensions) => new Meteor.Error('invalid-file-extension', `File extension \"${fileExtension}\" is not accepted (${allowedExtensions})`),\r\n      invalidFileType: (fileType, allowedContentTypes) => new Meteor.Error('invalid-file-type', `File type \"${fileType}\" is not accepted (${allowedContentTypes})`),\r\n      onCheck: this.onCheck,\r\n    }, options);\r\n\r\n    // Check options\r\n    if (options.contentTypes && !(options.contentTypes instanceof Array)) {\r\n      throw new TypeError('Filter: contentTypes is not an Array');\r\n    }\r\n    if (options.extensions && !(options.extensions instanceof Array)) {\r\n      throw new TypeError('Filter: extensions is not an Array');\r\n    }\r\n    if (typeof options.minSize !== 'number') {\r\n      throw new TypeError('Filter: minSize is not a number');\r\n    }\r\n    if (typeof options.maxSize !== 'number') {\r\n      throw new TypeError('Filter: maxSize is not a number');\r\n    }\r\n    if (options.onCheck && typeof options.onCheck !== 'function') {\r\n      throw new TypeError('Filter: onCheck is not a function');\r\n    }\r\n\r\n    // Public attributes\r\n    self.options = options;\r\n    ['onCheck'].forEach((method) => {\r\n      if (typeof options[method] === 'function') {\r\n        self[method] = options[method];\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Checks the file\r\n   * @param file\r\n   */\r\n  check(file) {\r\n    let error = null;\r\n    if (typeof file !== 'object' || !file) {\r\n      error = this.options.invalidFileError();\r\n    }\r\n    // Check size\r\n    let fileSize = file.size;\r\n    let minSize = this.getMinSize();\r\n    if (fileSize <= 0 || fileSize < minSize) {\r\n      error = this.options.fileTooSmallError(fileSize, minSize);\r\n    }\r\n    let maxSize = this.getMaxSize();\r\n    if (maxSize > 0 && fileSize > maxSize) {\r\n      error = this.options.fileTooLargeError(fileSize, maxSize);\r\n    }\r\n    // Check extension\r\n    let allowedExtensions = this.getExtensions();\r\n    let fileExtension = file.extension;\r\n    if (allowedExtensions && !allowedExtensions.includes(fileExtension)) {\r\n      error = this.options.invalidFileExtension(fileExtension, allowedExtensions);\r\n    }\r\n    // Check content type\r\n    let allowedContentTypes = this.getContentTypes();\r\n    let fileTypes = file.type;\r\n    if (allowedContentTypes && !this.isContentTypeInList(fileTypes, allowedContentTypes)) {\r\n      error = this.options.invalidFileType(fileTypes, allowedContentTypes);\r\n    }\r\n    // Apply custom check\r\n    if (typeof this.onCheck === 'function' && !this.onCheck(file)) {\r\n      error = new Meteor.Error('invalid-file', 'File does not match filter');\r\n    }\r\n\r\n    if (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the allowed content types\r\n   * @return {Array}\r\n   */\r\n  getContentTypes() {\r\n    return this.options.contentTypes;\r\n  }\r\n\r\n  /**\r\n   * Returns the allowed extensions\r\n   * @return {Array}\r\n   */\r\n  getExtensions() {\r\n    return this.options.extensions;\r\n  }\r\n\r\n  /**\r\n   * Returns the maximum file size\r\n   * @return {Number}\r\n   */\r\n  getMaxSize() {\r\n    return this.options.maxSize;\r\n  }\r\n\r\n  /**\r\n   * Returns the minimum file size\r\n   * @return {Number}\r\n   */\r\n  getMinSize() {\r\n    return this.options.minSize;\r\n  }\r\n\r\n  /**\r\n   * Checks if content type is in the given list\r\n   * @param type\r\n   * @param list\r\n   * @return {boolean}\r\n   */\r\n  isContentTypeInList(type, list) {\r\n    if (typeof type === 'string' && list instanceof Array) {\r\n      if (list.includes(type)) {\r\n        return true;\r\n      } else {\r\n        let wildCardGlob = '/*';\r\n        let wildcards = list.filter((item) => {\r\n          return item.indexOf(wildCardGlob) > 0;\r\n        });\r\n\r\n        if (wildcards.includes(type.replace(/(\\/.*)$/, wildCardGlob))) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Checks if the file matches filter\r\n   * @param file\r\n   * @return {boolean}\r\n   */\r\n  isValid(file) {\r\n    let result = true;\r\n    try {\r\n      this.check(file);\r\n    } catch (err) {\r\n      result = false;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Executes custom checks\r\n   * @param file\r\n   * @return {boolean}\r\n   */\r\n  onCheck(file) {\r\n    return true;\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport { check } from 'meteor/check';\r\nimport { Meteor } from 'meteor/meteor';\r\nimport { UploadFS } from './ufs';\r\nimport { Filter } from './ufs-filter';\r\nimport { Tokens } from './ufs-tokens';\r\n\r\nconst fs = Npm.require('fs');\r\nconst http = Npm.require('http');\r\nconst https = Npm.require('https');\r\nconst Future = Npm.require('fibers/future');\r\n\r\nif (Meteor.isServer) {\r\n  Meteor.methods({\r\n\r\n    /**\r\n     * Completes the file transfer\r\n     * @param fileId\r\n     * @param storeName\r\n     * @param token\r\n     */\r\n    ufsComplete(fileId, storeName, token) {\r\n      check(fileId, String);\r\n      check(storeName, String);\r\n      check(token, String);\r\n\r\n      // Get store\r\n      let store = UploadFS.getStore(storeName);\r\n      if (!store) {\r\n        throw new Meteor.Error('invalid-store', 'Store not found');\r\n      }\r\n      // Check token\r\n      if (!store.checkToken(token, fileId)) {\r\n        throw new Meteor.Error('invalid-token', 'Token is not valid');\r\n      }\r\n\r\n      let fut = new Future();\r\n      let tmpFile = UploadFS.getTempFilePath(fileId);\r\n\r\n      const removeTempFile = function () {\r\n        fs.unlink(tmpFile, function (err) {\r\n          err && console.error(`ufs: cannot delete temp file \"${tmpFile}\" (${err.message})`);\r\n        });\r\n      };\r\n\r\n      try {\r\n        // todo check if temp file exists\r\n\r\n        // Get file\r\n        let file = store.getCollection().findOne({ _id: fileId });\r\n\r\n        // Validate file before moving to the store\r\n        store.validate(file);\r\n\r\n        // Get the temp file\r\n        let rs = fs.createReadStream(tmpFile, {\r\n          flags: 'r',\r\n          encoding: null,\r\n          autoClose: true,\r\n        });\r\n\r\n        // Clean upload if error occurs\r\n        rs.on('error', Meteor.bindEnvironment(function (err) {\r\n          console.error(err);\r\n          store.getCollection().remove({ _id: fileId });\r\n          fut.throw(err);\r\n        }));\r\n\r\n        // Save file in the store\r\n        store.write(rs, fileId, Meteor.bindEnvironment(function (err, file) {\r\n          removeTempFile();\r\n\r\n          if (err) {\r\n            fut.throw(err);\r\n          } else {\r\n            // File has been fully uploaded\r\n            // so we don't need to keep the token anymore.\r\n            // Also this ensure that the file cannot be modified with extra chunks later.\r\n            Tokens.remove({ fileId: fileId });\r\n            fut.return(file);\r\n          }\r\n        }));\r\n\r\n        // catch will not work if fut.wait() is outside try/catch\r\n        return fut.wait();\r\n      } catch (err) {\r\n        // If write failed, remove the file\r\n        store.getCollection().remove({ _id: fileId });\r\n        // removeTempFile(); // todo remove temp file on error or try again ?\r\n        throw new Meteor.Error('ufs: cannot upload file', err);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Creates the file and returns the file upload token\r\n     * @param file\r\n     * @return {{fileId: string, token: *, url: *}}\r\n     */\r\n    ufsCreate(file) {\r\n      check(file, Object);\r\n\r\n      if (typeof file.name !== 'string' || !file.name.length) {\r\n        throw new Meteor.Error('invalid-file-name', 'file name is not valid');\r\n      }\r\n      if (typeof file.store !== 'string' || !file.store.length) {\r\n        throw new Meteor.Error('invalid-store', 'store is not valid');\r\n      }\r\n      // Get store\r\n      let store = UploadFS.getStore(file.store);\r\n      if (!store) {\r\n        throw new Meteor.Error('invalid-store', 'Store not found');\r\n      }\r\n\r\n      // Set default info\r\n      file.complete = false;\r\n      file.uploading = false;\r\n      file.extension = file.name && file.name.substr((~-file.name.lastIndexOf('.') >>> 0) + 2).toLowerCase();\r\n      // Assign file MIME type based on the extension\r\n      if (file.extension && !file.type) {\r\n        file.type = UploadFS.getMimeType(file.extension) || 'application/octet-stream';\r\n      }\r\n      file.progress = 0;\r\n      file.size = parseInt(file.size) || 0;\r\n      file.userId = file.userId || this.userId;\r\n\r\n      // Check if the file matches store filter\r\n      let filter = store.getFilter();\r\n      if (filter instanceof Filter) {\r\n        filter.check(file);\r\n      }\r\n\r\n      // Create the file\r\n      let fileId = store.create(file);\r\n      let token = store.createToken(fileId);\r\n      let uploadUrl = store.getURL(`${fileId}?token=${token}`);\r\n\r\n      return {\r\n        fileId: fileId,\r\n        token: token,\r\n        url: uploadUrl,\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Deletes a file\r\n     * @param fileId\r\n     * @param storeName\r\n     * @param token\r\n     * @returns {*}\r\n     */\r\n    ufsDelete(fileId, storeName, token) {\r\n      check(fileId, String);\r\n      check(storeName, String);\r\n      check(token, String);\r\n\r\n      // Check store\r\n      let store = UploadFS.getStore(storeName);\r\n      if (!store) {\r\n        throw new Meteor.Error('invalid-store', 'Store not found');\r\n      }\r\n      // Ignore files that does not exist\r\n      if (store.getCollection().find({ _id: fileId }).count() === 0) {\r\n        return 1;\r\n      }\r\n      // Check token\r\n      if (!store.checkToken(token, fileId)) {\r\n        throw new Meteor.Error('invalid-token', 'Token is not valid');\r\n      }\r\n      return store.getCollection().remove({ _id: fileId });\r\n    },\r\n\r\n    /**\r\n     * Imports a file from the URL\r\n     * @param url\r\n     * @param file\r\n     * @param storeName\r\n     * @return {*}\r\n     */\r\n    ufsImportURL(url, file, storeName) {\r\n      check(url, String);\r\n      check(file, Object);\r\n      check(storeName, String);\r\n\r\n      // Check URL\r\n      if (typeof url !== 'string' || url.length <= 0) {\r\n        throw new Meteor.Error('invalid-url', 'The url is not valid');\r\n      }\r\n      // Check file\r\n      if (typeof file !== 'object' || file === null) {\r\n        throw new Meteor.Error('invalid-file', 'The file is not valid');\r\n      }\r\n      // Check store\r\n      const store = UploadFS.getStore(storeName);\r\n      if (!store) {\r\n        throw new Meteor.Error('invalid-store', 'The store does not exist');\r\n      }\r\n\r\n      // Extract file info\r\n      if (!file.name) {\r\n        file.name = url.replace(/\\?.*$/, '').split('/').pop();\r\n      }\r\n      if (file.name && !file.extension) {\r\n        file.extension = file.name && file.name.substr((~-file.name.lastIndexOf('.') >>> 0) + 2).toLowerCase();\r\n      }\r\n      if (file.extension && !file.type) {\r\n        // Assign file MIME type based on the extension\r\n        file.type = UploadFS.getMimeType(file.extension) || 'application/octet-stream';\r\n      }\r\n      // Check if file is valid\r\n      if (store.getFilter() instanceof Filter) {\r\n        store.getFilter().check(file);\r\n      }\r\n\r\n      if (file.originalUrl) {\r\n        console.warn(`ufs: The \"originalUrl\" attribute is automatically set when importing a file from a URL`);\r\n      }\r\n\r\n      // Add original URL\r\n      file.originalUrl = url;\r\n\r\n      // Create the file\r\n      file.complete = false;\r\n      file.uploading = true;\r\n      file.progress = 0;\r\n      file._id = store.create(file);\r\n\r\n      let fut = new Future();\r\n      let proto;\r\n\r\n      // Detect protocol to use\r\n      if (/http:\\/\\//i.test(url)) {\r\n        proto = http;\r\n      } else if (/https:\\/\\//i.test(url)) {\r\n        proto = https;\r\n      }\r\n\r\n      this.unblock();\r\n\r\n      // Download file\r\n      proto.get(url, Meteor.bindEnvironment(function (res) {\r\n        // Save the file in the store\r\n        store.write(res, file._id, function (err, file) {\r\n          if (err) {\r\n            fut.throw(err);\r\n          } else {\r\n            fut.return(file);\r\n          }\r\n        });\r\n      })).on('error', function (err) {\r\n        fut.throw(err);\r\n      });\r\n      return fut.wait();\r\n    },\r\n\r\n    /**\r\n     * Marks the file uploading as stopped\r\n     * @param fileId\r\n     * @param storeName\r\n     * @param token\r\n     * @returns {*}\r\n     */\r\n    ufsStop(fileId, storeName, token) {\r\n      check(fileId, String);\r\n      check(storeName, String);\r\n      check(token, String);\r\n\r\n      // Check store\r\n      const store = UploadFS.getStore(storeName);\r\n      if (!store) {\r\n        throw new Meteor.Error('invalid-store', 'Store not found');\r\n      }\r\n      // Check file\r\n      const file = store.getCollection().find({ _id: fileId }, { fields: { userId: 1 } });\r\n      if (!file) {\r\n        throw new Meteor.Error('invalid-file', 'File not found');\r\n      }\r\n      // Check token\r\n      if (!store.checkToken(token, fileId)) {\r\n        throw new Meteor.Error('invalid-token', 'Token is not valid');\r\n      }\r\n\r\n      return store.getCollection().update({ _id: fileId }, {\r\n        $set: { uploading: false },\r\n      });\r\n    },\r\n  });\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * MIME types and extensions\r\n */\r\nexport const MIME = {\r\n\r\n  // application\r\n  '7z': 'application/x-7z-compressed',\r\n  'arc': 'application/octet-stream',\r\n  'ai': 'application/postscript',\r\n  'bin': 'application/octet-stream',\r\n  'bz': 'application/x-bzip',\r\n  'bz2': 'application/x-bzip2',\r\n  'eps': 'application/postscript',\r\n  'exe': 'application/octet-stream',\r\n  'gz': 'application/x-gzip',\r\n  'gzip': 'application/x-gzip',\r\n  'js': 'application/javascript',\r\n  'json': 'application/json',\r\n  'ogx': 'application/ogg',\r\n  'pdf': 'application/pdf',\r\n  'ps': 'application/postscript',\r\n  'psd': 'application/octet-stream',\r\n  'rar': 'application/x-rar-compressed',\r\n  'rev': 'application/x-rar-compressed',\r\n  'swf': 'application/x-shockwave-flash',\r\n  'tar': 'application/x-tar',\r\n  'xhtml': 'application/xhtml+xml',\r\n  'xml': 'application/xml',\r\n  'zip': 'application/zip',\r\n\r\n  // audio\r\n  'aif': 'audio/aiff',\r\n  'aifc': 'audio/aiff',\r\n  'aiff': 'audio/aiff',\r\n  'au': 'audio/basic',\r\n  'flac': 'audio/flac',\r\n  'midi': 'audio/midi',\r\n  'mp2': 'audio/mpeg',\r\n  'mp3': 'audio/mpeg',\r\n  'mpa': 'audio/mpeg',\r\n  'oga': 'audio/ogg',\r\n  'ogg': 'audio/ogg',\r\n  'opus': 'audio/ogg',\r\n  'ra': 'audio/vnd.rn-realaudio',\r\n  'spx': 'audio/ogg',\r\n  'wav': 'audio/x-wav',\r\n  'weba': 'audio/webm',\r\n  'wma': 'audio/x-ms-wma',\r\n\r\n  // image\r\n  'avs': 'image/avs-video',\r\n  'bmp': 'image/x-windows-bmp',\r\n  'gif': 'image/gif',\r\n  'ico': 'image/vnd.microsoft.icon',\r\n  'jpeg': 'image/jpeg',\r\n  'jpg': 'image/jpg',\r\n  'mjpg': 'image/x-motion-jpeg',\r\n  'pic': 'image/pic',\r\n  'png': 'image/png',\r\n  'svg': 'image/svg+xml',\r\n  'tif': 'image/tiff',\r\n  'tiff': 'image/tiff',\r\n\r\n  // text\r\n  'css': 'text/css',\r\n  'csv': 'text/csv',\r\n  'html': 'text/html',\r\n  'txt': 'text/plain',\r\n\r\n  // video\r\n  'avi': 'video/avi',\r\n  'dv': 'video/x-dv',\r\n  'flv': 'video/x-flv',\r\n  'mov': 'video/quicktime',\r\n  'mp4': 'video/mp4',\r\n  'mpeg': 'video/mpeg',\r\n  'mpg': 'video/mpg',\r\n  'ogv': 'video/ogg',\r\n  'vdo': 'video/vdo',\r\n  'webm': 'video/webm',\r\n  'wmv': 'video/x-ms-wmv',\r\n\r\n  // specific to vendors\r\n  'doc': 'application/msword',\r\n  'docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n  'odb': 'application/vnd.oasis.opendocument.database',\r\n  'odc': 'application/vnd.oasis.opendocument.chart',\r\n  'odf': 'application/vnd.oasis.opendocument.formula',\r\n  'odg': 'application/vnd.oasis.opendocument.graphics',\r\n  'odi': 'application/vnd.oasis.opendocument.image',\r\n  'odm': 'application/vnd.oasis.opendocument.text-master',\r\n  'odp': 'application/vnd.oasis.opendocument.presentation',\r\n  'ods': 'application/vnd.oasis.opendocument.spreadsheet',\r\n  'odt': 'application/vnd.oasis.opendocument.text',\r\n  'otg': 'application/vnd.oasis.opendocument.graphics-template',\r\n  'otp': 'application/vnd.oasis.opendocument.presentation-template',\r\n  'ots': 'application/vnd.oasis.opendocument.spreadsheet-template',\r\n  'ott': 'application/vnd.oasis.opendocument.text-template',\r\n  'ppt': 'application/vnd.ms-powerpoint',\r\n  'pptx': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n  'xls': 'application/vnd.ms-excel',\r\n  'xlsx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n};\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\nimport { Meteor } from 'meteor/meteor';\r\nimport { WebApp } from 'meteor/webapp';\r\nimport SparkMD5 from 'spark-md5';\r\nimport { UploadFS } from './ufs';\r\n\r\nif (Meteor.isServer) {\r\n\r\n  const domain = Npm.require('domain');\r\n  const fs = Npm.require('fs');\r\n  const http = Npm.require('http');\r\n  const https = Npm.require('https');\r\n  const mkdirp = Npm.require('mkdirp');\r\n  const stream = Npm.require('stream');\r\n  const URL = Npm.require('url');\r\n  const zlib = Npm.require('zlib');\r\n\r\n  Meteor.startup(() => {\r\n    let path = UploadFS.config.tmpDir;\r\n    let mode = UploadFS.config.tmpDirPermissions;\r\n\r\n    fs.stat(path, (err) => {\r\n      if (err) {\r\n        // Create the temp directory\r\n        mkdirp(path, { mode: mode }, (err) => {\r\n          if (err) {\r\n            console.error(`ufs: cannot create temp directory at \"${path}\" (${err.message})`);\r\n          } else {\r\n            console.log(`ufs: temp directory created at \"${path}\"`);\r\n          }\r\n        });\r\n      } else {\r\n        // Set directory permissions\r\n        fs.chmod(path, mode, (err) => {\r\n          err && console.error(`ufs: cannot set temp directory permissions ${mode} (${err.message})`);\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  // Create domain to handle errors\r\n  // and possibly avoid server crashes.\r\n  let d = domain.create();\r\n\r\n  d.on('error', (err) => {\r\n    console.error('ufs: ' + err.message);\r\n  });\r\n\r\n  // Listen HTTP requests to serve files\r\n  WebApp.connectHandlers.use((req, res, next) => {\r\n    // Quick check to see if request should be catch\r\n    if (req.url.indexOf(UploadFS.config.storesPath) === -1) {\r\n      next();\r\n      return;\r\n    }\r\n\r\n    // Remove store path\r\n    let parsedUrl = URL.parse(req.url);\r\n    let path = parsedUrl.pathname.substr(UploadFS.config.storesPath.length + 1);\r\n\r\n    let allowCORS = () => {\r\n      // res.setHeader('Access-Control-Allow-Origin', req.headers.origin);\r\n      res.setHeader('Access-Control-Allow-Methods', 'POST');\r\n      res.setHeader('Access-Control-Allow-Origin', '*');\r\n      res.setHeader('Access-Control-Allow-Headers', 'Content-Type');\r\n    };\r\n\r\n    if (req.method === 'OPTIONS') {\r\n      let regExp = new RegExp('^\\/([^\\/\\?]+)\\/([^\\/\\?]+)$');\r\n      let match = regExp.exec(path);\r\n\r\n      // Request is not valid\r\n      if (match === null) {\r\n        res.writeHead(400);\r\n        res.end();\r\n        return;\r\n      }\r\n\r\n      // Get store\r\n      let store = UploadFS.getStore(match[1]);\r\n      if (!store) {\r\n        res.writeHead(404);\r\n        res.end();\r\n        return;\r\n      }\r\n\r\n      // If a store is found, go ahead and allow the origin\r\n      allowCORS();\r\n\r\n      next();\r\n    } else if (req.method === 'POST') {\r\n      // Get store\r\n      let regExp = new RegExp('^\\/([^\\/\\?]+)\\/([^\\/\\?]+)$');\r\n      let match = regExp.exec(path);\r\n\r\n      // Request is not valid\r\n      if (match === null) {\r\n        res.writeHead(400);\r\n        res.end();\r\n        return;\r\n      }\r\n\r\n      // Get store\r\n      let store = UploadFS.getStore(match[1]);\r\n      if (!store) {\r\n        res.writeHead(404);\r\n        res.end();\r\n        return;\r\n      }\r\n\r\n      // If a store is found, go ahead and allow the origin\r\n      allowCORS();\r\n\r\n      // Get file\r\n      let fileId = match[2];\r\n      if (store.getCollection().find({ _id: fileId }).count() === 0) {\r\n        res.writeHead(404);\r\n        res.end();\r\n        return;\r\n      }\r\n\r\n      // Check upload token\r\n      if (!store.checkToken(req.query.token, fileId)) {\r\n        res.writeHead(403);\r\n        res.end();\r\n        return;\r\n      }\r\n\r\n      //Check if duplicate\r\n      const unique = function (hash) {\r\n        const originalId = store.getCollection().findOne({ hash: hash, _id: { $ne: fileId } });\r\n        return originalId ? originalId._id : false;\r\n      };\r\n\r\n      let spark = new SparkMD5.ArrayBuffer();\r\n      let tmpFile = UploadFS.getTempFilePath(fileId);\r\n      let ws = fs.createWriteStream(tmpFile, { flags: 'a' });\r\n      let fields = { uploading: true };\r\n      let progress = parseFloat(req.query.progress);\r\n      if (!isNaN(progress) && progress > 0) {\r\n        fields.progress = Math.min(progress, 1);\r\n      }\r\n\r\n      req.on('data', (chunk) => {\r\n        ws.write(chunk);\r\n        spark.append(chunk);\r\n      });\r\n      req.on('error', (err) => {\r\n        res.writeHead(500);\r\n        res.end();\r\n      });\r\n      req.on('end', Meteor.bindEnvironment(() => {\r\n        // Update completed state without triggering hooks\r\n        fields.hash = spark.end();\r\n        fields.originalId = unique(fields.hash);\r\n        store.getCollection().direct.update({ _id: fileId }, { $set: fields });\r\n        ws.end();\r\n      }));\r\n      ws.on('error', (err) => {\r\n        console.error(`ufs: cannot write chunk of file \"${fileId}\" (${err.message})`);\r\n        fs.unlink(tmpFile, (err) => {\r\n          err && console.error(`ufs: cannot delete temp file \"${tmpFile}\" (${err.message})`);\r\n        });\r\n        res.writeHead(500);\r\n        res.end();\r\n      });\r\n      ws.on('finish', () => {\r\n        res.writeHead(204, { 'Content-Type': 'text/plain' });\r\n        res.end();\r\n      });\r\n    } else if (req.method === 'GET') {\r\n      // Get store, file Id and file name\r\n      let regExp = new RegExp('^\\/([^\\/\\?]+)\\/([^\\/\\?]+)(?:\\/([^\\/\\?]+))?$');\r\n      let match = regExp.exec(path);\r\n\r\n      // Avoid 504 Gateway timeout error\r\n      // if file is not handled by UploadFS.\r\n      if (match === null) {\r\n        next();\r\n        return;\r\n      }\r\n\r\n      // Get store\r\n      const storeName = match[1];\r\n      const store = UploadFS.getStore(storeName);\r\n\r\n      if (!store) {\r\n        res.writeHead(404);\r\n        res.end();\r\n        return;\r\n      }\r\n\r\n      if (store.onRead !== null && store.onRead !== undefined && typeof store.onRead !== 'function') {\r\n        console.error(`ufs: Store.onRead is not a function in store \"${storeName}\"`);\r\n        res.writeHead(500);\r\n        res.end();\r\n        return;\r\n      }\r\n\r\n      // Remove file extension from file Id\r\n      let index = match[2].indexOf('.');\r\n      let fileId = index !== -1 ? match[2].substr(0, index) : match[2];\r\n\r\n      // Get file from database\r\n      const file = store.getCollection().findOne({ _id: fileId });\r\n      if (!file) {\r\n        res.writeHead(404);\r\n        res.end();\r\n        return;\r\n      }\r\n\r\n      // Simulate read speed\r\n      if (UploadFS.config.simulateReadDelay) {\r\n        Meteor._sleepForMs(UploadFS.config.simulateReadDelay);\r\n      }\r\n\r\n      d.run(() => {\r\n        // Check if the file can be accessed\r\n        if (store.onRead.call(store, fileId, file, req, res) !== false) {\r\n          let options = {};\r\n          let status = 200;\r\n\r\n          // Prepare response headers\r\n          let headers = {\r\n            'Content-Type': file.type,\r\n            'Content-Length': file.size,\r\n          };\r\n\r\n          // Add ETag header\r\n          if (typeof file.etag === 'string') {\r\n            headers['ETag'] = file.etag;\r\n          }\r\n\r\n          // Add Last-Modified header\r\n          if (file.modifiedAt instanceof Date) {\r\n            headers['Last-Modified'] = file.modifiedAt.toUTCString();\r\n          } else if (file.uploadedAt instanceof Date) {\r\n            headers['Last-Modified'] = file.uploadedAt.toUTCString();\r\n          }\r\n\r\n          // Parse request headers\r\n          if (typeof req.headers === 'object') {\r\n\r\n            // Compare ETag\r\n            if (req.headers['if-none-match']) {\r\n              if (file.etag === req.headers['if-none-match']) {\r\n                res.writeHead(304); // Not Modified\r\n                res.end();\r\n                return;\r\n              }\r\n            }\r\n\r\n            // Compare file modification date\r\n            if (req.headers['if-modified-since']) {\r\n              const modifiedSince = new Date(req.headers['if-modified-since']);\r\n\r\n              if ((file.modifiedAt instanceof Date && file.modifiedAt > modifiedSince)\r\n                || file.uploadedAt instanceof Date && file.uploadedAt > modifiedSince) {\r\n                res.writeHead(304); // Not Modified\r\n                res.end();\r\n                return;\r\n              }\r\n            }\r\n\r\n            // Support range request\r\n            if (typeof req.headers.range === 'string') {\r\n              const range = req.headers.range;\r\n\r\n              // Range is not valid\r\n              if (!range) {\r\n                res.writeHead(416);\r\n                res.end();\r\n                return;\r\n              }\r\n\r\n              const total = file.size;\r\n              const unit = range.substr(0, range.indexOf('='));\r\n\r\n              if (unit !== 'bytes') {\r\n                res.writeHead(416);\r\n                res.end();\r\n                return;\r\n              }\r\n\r\n              const ranges = range.substr(unit.length).replace(/[^0-9\\-,]/, '').split(',');\r\n\r\n              if (ranges.length > 1) {\r\n                //todo: support multipart ranges: https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests\r\n              } else {\r\n                const r = ranges[0].split('-');\r\n                const start = parseInt(r[0], 10);\r\n                const end = r[1] ? parseInt(r[1], 10) : total - 1;\r\n\r\n                // Range is not valid\r\n                if (start < 0 || end >= total || start > end) {\r\n                  res.writeHead(416);\r\n                  res.end();\r\n                  return;\r\n                }\r\n\r\n                // Update headers\r\n                headers['Content-Range'] = `bytes ${start}-${end}/${total}`;\r\n                headers['Content-Length'] = end - start + 1;\r\n                options.start = start;\r\n                options.end = end;\r\n              }\r\n              status = 206; // partial content\r\n            }\r\n          } else {\r\n            headers['Accept-Ranges'] = 'bytes';\r\n          }\r\n\r\n          // Open the file stream\r\n          const rs = store.getReadStream(fileId, file, options);\r\n          const ws = new stream.PassThrough();\r\n\r\n          rs.on('error', Meteor.bindEnvironment((err) => {\r\n            store.onReadError.call(store, err, fileId, file);\r\n            res.end();\r\n          }));\r\n          ws.on('error', Meteor.bindEnvironment((err) => {\r\n            store.onReadError.call(store, err, fileId, file);\r\n            res.end();\r\n          }));\r\n          ws.on('close', () => {\r\n            // Close output stream at the end\r\n            ws.emit('end');\r\n          });\r\n\r\n          // Transform stream\r\n          store.transformRead(rs, ws, fileId, file, req, headers);\r\n\r\n          // Parse request headers\r\n          if (typeof req.headers === 'object') {\r\n            // Compress data using if needed (ignore audio/video as they are already compressed)\r\n            if (typeof req.headers['accept-encoding'] === 'string' && !/^(audio|video)/.test(file.type)) {\r\n              let accept = req.headers['accept-encoding'];\r\n\r\n              // Compress with gzip\r\n              if (accept.match(/\\bgzip\\b/)) {\r\n                headers['Content-Encoding'] = 'gzip';\r\n                delete headers['Content-Length'];\r\n                res.writeHead(status, headers);\r\n                ws.pipe(zlib.createGzip()).pipe(res);\r\n                return;\r\n              }\r\n              // Compress with deflate\r\n              else if (accept.match(/\\bdeflate\\b/)) {\r\n                headers['Content-Encoding'] = 'deflate';\r\n                delete headers['Content-Length'];\r\n                res.writeHead(status, headers);\r\n                ws.pipe(zlib.createDeflate()).pipe(res);\r\n                return;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Send raw data\r\n          if (!headers['Content-Encoding']) {\r\n            res.writeHead(status, headers);\r\n            ws.pipe(res);\r\n          }\r\n\r\n        } else {\r\n          res.end();\r\n        }\r\n      });\r\n    } else {\r\n      next();\r\n    }\r\n  });\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport { _ } from 'meteor/underscore';\r\n\r\n/**\r\n * Store permissions\r\n */\r\nexport class StorePermissions {\r\n\r\n  constructor(options) {\r\n    // Default options\r\n    options = _.extend({\r\n      insert: null,\r\n      remove: null,\r\n      update: null,\r\n    }, options);\r\n\r\n    // Check options\r\n    if (options.insert && typeof options.insert !== 'function') {\r\n      throw new TypeError('StorePermissions: insert is not a function');\r\n    }\r\n    if (options.remove && typeof options.remove !== 'function') {\r\n      throw new TypeError('StorePermissions: remove is not a function');\r\n    }\r\n    if (options.update && typeof options.update !== 'function') {\r\n      throw new TypeError('StorePermissions: update is not a function');\r\n    }\r\n\r\n    // Public attributes\r\n    this.actions = {\r\n      insert: options.insert,\r\n      remove: options.remove,\r\n      update: options.update,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Checks the permission for the action\r\n   * @param action\r\n   * @param userId\r\n   * @param file\r\n   * @param fields\r\n   * @param modifiers\r\n   * @return {*}\r\n   */\r\n  check(action, userId, file, fields, modifiers) {\r\n    if (typeof this.actions[action] === 'function') {\r\n      return this.actions[action](userId, file, fields, modifiers);\r\n    }\r\n    return true; // by default allow all\r\n  }\r\n\r\n  /**\r\n   * Checks the insert permission\r\n   * @param userId\r\n   * @param file\r\n   * @returns {*}\r\n   */\r\n  checkInsert(userId, file) {\r\n    return this.check('insert', userId, file);\r\n  }\r\n\r\n  /**\r\n   * Checks the remove permission\r\n   * @param userId\r\n   * @param file\r\n   * @returns {*}\r\n   */\r\n  checkRemove(userId, file) {\r\n    return this.check('remove', userId, file);\r\n  }\r\n\r\n  /**\r\n   * Checks the update permission\r\n   * @param userId\r\n   * @param file\r\n   * @param fields\r\n   * @param modifiers\r\n   * @returns {*}\r\n   */\r\n  checkUpdate(userId, file, fields, modifiers) {\r\n    return this.check('update', userId, file, fields, modifiers);\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\nimport { check } from 'meteor/check';\r\nimport { Meteor } from 'meteor/meteor';\r\nimport { Mongo } from 'meteor/mongo';\r\nimport { _ } from 'meteor/underscore';\r\nimport { UploadFS } from './ufs';\r\nimport { Filter } from './ufs-filter';\r\nimport { StorePermissions } from './ufs-store-permissions';\r\nimport { Tokens } from './ufs-tokens';\r\n\r\n/**\r\n * File store\r\n */\r\nexport class Store {\r\n\r\n  constructor(options) {\r\n    let self = this;\r\n\r\n    // Default options\r\n    options = _.extend({\r\n      collection: null,\r\n      filter: null,\r\n      name: null,\r\n      onCopyError: this.onCopyError,\r\n      onFinishUpload: this.onFinishUpload,\r\n      onRead: this.onRead,\r\n      onReadError: this.onReadError,\r\n      onValidate: this.onValidate,\r\n      onWriteError: this.onWriteError,\r\n      permissions: null,\r\n      transformRead: null,\r\n      transformWrite: null,\r\n    }, options);\r\n\r\n    // Check options\r\n    if (!(options.collection instanceof Mongo.Collection)) {\r\n      throw new TypeError('Store: collection is not a Mongo.Collection');\r\n    }\r\n    if (options.filter && !(options.filter instanceof Filter)) {\r\n      throw new TypeError('Store: filter is not a UploadFS.Filter');\r\n    }\r\n    if (typeof options.name !== 'string') {\r\n      throw new TypeError('Store: name is not a string');\r\n    }\r\n    if (UploadFS.getStore(options.name)) {\r\n      throw new TypeError('Store: name already exists');\r\n    }\r\n    if (options.onCopyError && typeof options.onCopyError !== 'function') {\r\n      throw new TypeError('Store: onCopyError is not a function');\r\n    }\r\n    if (options.onFinishUpload && typeof options.onFinishUpload !== 'function') {\r\n      throw new TypeError('Store: onFinishUpload is not a function');\r\n    }\r\n    if (options.onRead && typeof options.onRead !== 'function') {\r\n      throw new TypeError('Store: onRead is not a function');\r\n    }\r\n    if (options.onReadError && typeof options.onReadError !== 'function') {\r\n      throw new TypeError('Store: onReadError is not a function');\r\n    }\r\n    if (options.onWriteError && typeof options.onWriteError !== 'function') {\r\n      throw new TypeError('Store: onWriteError is not a function');\r\n    }\r\n    if (options.permissions && !(options.permissions instanceof StorePermissions)) {\r\n      throw new TypeError('Store: permissions is not a UploadFS.StorePermissions');\r\n    }\r\n    if (options.transformRead && typeof options.transformRead !== 'function') {\r\n      throw new TypeError('Store: transformRead is not a function');\r\n    }\r\n    if (options.transformWrite && typeof options.transformWrite !== 'function') {\r\n      throw new TypeError('Store: transformWrite is not a function');\r\n    }\r\n    if (options.onValidate && typeof options.onValidate !== 'function') {\r\n      throw new TypeError('Store: onValidate is not a function');\r\n    }\r\n\r\n    // Public attributes\r\n    self.options = options;\r\n    self.permissions = options.permissions;\r\n    [\r\n      'onCopyError',\r\n      'onFinishUpload',\r\n      'onRead',\r\n      'onReadError',\r\n      'onWriteError',\r\n      'onValidate',\r\n    ].forEach((method) => {\r\n      if (typeof options[method] === 'function') {\r\n        self[method] = options[method];\r\n      }\r\n    });\r\n\r\n    // Add the store to the list\r\n    UploadFS.addStore(self);\r\n\r\n    // Set default permissions\r\n    if (!(self.permissions instanceof StorePermissions)) {\r\n      // Uses custom default permissions or UFS default permissions\r\n      if (UploadFS.config.defaultStorePermissions instanceof StorePermissions) {\r\n        self.permissions = UploadFS.config.defaultStorePermissions;\r\n      } else {\r\n        self.permissions = new StorePermissions();\r\n        console.warn(`ufs: permissions are not defined for store \"${options.name}\"`);\r\n      }\r\n    }\r\n\r\n    if (Meteor.isServer) {\r\n\r\n      /**\r\n       * Checks token validity\r\n       * @param token\r\n       * @param fileId\r\n       * @returns {boolean}\r\n       */\r\n      self.checkToken = function (token, fileId) {\r\n        check(token, String);\r\n        check(fileId, String);\r\n        return Tokens.find({ value: token, fileId: fileId }).count() === 1;\r\n      };\r\n\r\n      /**\r\n       * Copies the file to a store\r\n       * @param fileId\r\n       * @param store\r\n       * @param callback\r\n       */\r\n      self.copy = function (fileId, store, callback) {\r\n        check(fileId, String);\r\n\r\n        if (!(store instanceof Store)) {\r\n          throw new TypeError('store is not an instance of UploadFS.Store');\r\n        }\r\n        // Get original file\r\n        let file = self.getCollection().findOne({ _id: fileId });\r\n        if (!file) {\r\n          throw new Meteor.Error('file-not-found', 'File not found');\r\n        }\r\n        // Silently ignore the file if it does not match filter\r\n        const filter = store.getFilter();\r\n        if (filter instanceof Filter && !filter.isValid(file)) {\r\n          return;\r\n        }\r\n\r\n        // Prepare copy\r\n        let { _id, url, ...copy } = file;\r\n        copy.originalStore = self.getName();\r\n        copy.originalId = fileId;\r\n\r\n        // Create the copy\r\n        let copyId = store.create(copy);\r\n\r\n        // Get original stream\r\n        let rs = self.getReadStream(fileId, file);\r\n\r\n        // Catch errors to avoid app crashing\r\n        rs.on('error', Meteor.bindEnvironment(function (err) {\r\n          callback.call(self, err, null);\r\n        }));\r\n\r\n        // Copy file data\r\n        store.write(rs, copyId, Meteor.bindEnvironment(function (err) {\r\n          if (err) {\r\n            self.getCollection().remove({ _id: copyId });\r\n            self.onCopyError.call(self, err, fileId, file);\r\n          }\r\n          if (typeof callback === 'function') {\r\n            callback.call(self, err, copyId, copy, store);\r\n          }\r\n        }));\r\n      };\r\n\r\n      /**\r\n       * Creates the file in the collection\r\n       * @param file\r\n       * @param callback\r\n       * @return {string}\r\n       */\r\n      self.create = function (file, callback) {\r\n        check(file, Object);\r\n        file.store = self.options.name; // assign store to file\r\n        return self.getCollection().insert(file, callback);\r\n      };\r\n\r\n      /**\r\n       * Creates a token for the file (only needed for client side upload)\r\n       * @param fileId\r\n       * @returns {*}\r\n       */\r\n      self.createToken = function (fileId) {\r\n        let token = self.generateToken();\r\n\r\n        // Check if token exists\r\n        if (Tokens.find({ fileId: fileId }).count()) {\r\n          Tokens.update({ fileId: fileId }, {\r\n            $set: {\r\n              createdAt: new Date(),\r\n              value: token,\r\n            },\r\n          });\r\n        } else {\r\n          Tokens.insert({\r\n            createdAt: new Date(),\r\n            fileId: fileId,\r\n            value: token,\r\n          });\r\n        }\r\n        return token;\r\n      };\r\n\r\n      /**\r\n       * Writes the file to the store\r\n       * @param rs\r\n       * @param fileId\r\n       * @param callback\r\n       */\r\n      self.write = function (rs, fileId, callback) {\r\n        const file = self.getCollection().findOne({ _id: fileId });\r\n\r\n        const errorHandler = Meteor.bindEnvironment(function (err) {\r\n          self.onWriteError.call(self, err, fileId, file);\r\n          callback.call(self, err);\r\n        });\r\n\r\n        const finishHandler = Meteor.bindEnvironment(function () {\r\n          let size = 0;\r\n          const readStream = self.getReadStream(fileId, file);\r\n\r\n          readStream.on('error', Meteor.bindEnvironment(function (error) {\r\n            callback.call(self, error, null);\r\n          }));\r\n          readStream.on('data', Meteor.bindEnvironment(function (data) {\r\n            size += data.length;\r\n          }));\r\n          readStream.on('end', Meteor.bindEnvironment(function () {\r\n            // Set file attribute\r\n            file.complete = true;\r\n            file.etag = UploadFS.generateEtag();\r\n            file.path = self.getFileRelativeURL(fileId);\r\n            file.progress = 1;\r\n            file.size = size;\r\n            file.token = self.generateToken();\r\n            file.uploading = false;\r\n            file.uploadedAt = new Date();\r\n            file.url = self.getFileURL(fileId);\r\n\r\n            // Execute callback\r\n            if (typeof self.onFinishUpload === 'function') {\r\n              self.onFinishUpload.call(self, file);\r\n            }\r\n\r\n            // Sets the file URL when file transfer is complete,\r\n            // this way, the image will loads entirely.\r\n            self.getCollection().direct.update({ _id: fileId }, {\r\n              $set: {\r\n                complete: file.complete,\r\n                etag: file.etag,\r\n                path: file.path,\r\n                progress: file.progress,\r\n                size: file.size,\r\n                token: file.token,\r\n                uploading: file.uploading,\r\n                uploadedAt: file.uploadedAt,\r\n                url: file.url,\r\n              },\r\n            });\r\n\r\n            // Return file info\r\n            callback.call(self, null, file);\r\n\r\n            // Simulate write speed\r\n            if (UploadFS.config.simulateWriteDelay) {\r\n              Meteor._sleepForMs(UploadFS.config.simulateWriteDelay);\r\n            }\r\n\r\n            // Copy file to other stores\r\n            if (self.options.copyTo instanceof Array) {\r\n              for (let i = 0; i < self.options.copyTo.length; i += 1) {\r\n                const store = self.options.copyTo[i];\r\n\r\n                if (!store.getFilter() || store.getFilter().isValid(file)) {\r\n                  self.copy(fileId, store);\r\n                }\r\n              }\r\n            }\r\n          }));\r\n        });\r\n\r\n        const ws = self.getWriteStream(fileId, file);\r\n        ws.on('error', errorHandler);\r\n        ws.on('finish', finishHandler);\r\n\r\n        // Execute transformation\r\n        self.transformWrite(rs, ws, fileId, file);\r\n      };\r\n    }\r\n\r\n    if (Meteor.isServer) {\r\n      const fs = Npm.require('fs');\r\n      const collection = self.getCollection();\r\n\r\n      // Code executed after removing file\r\n      collection.after.remove(function (userId, file) {\r\n        // Remove associated tokens\r\n        Tokens.remove({ fileId: file._id });\r\n\r\n        if (self.options.copyTo instanceof Array) {\r\n          for (let i = 0; i < self.options.copyTo.length; i += 1) {\r\n            // Remove copies in stores\r\n            self.options.copyTo[i].getCollection().remove({ originalId: file._id });\r\n          }\r\n        }\r\n      });\r\n\r\n      // Code executed before inserting file\r\n      collection.before.insert(function (userId, file) {\r\n        if (!self.permissions.checkInsert(userId, file)) {\r\n          throw new Meteor.Error('forbidden', 'Forbidden');\r\n        }\r\n      });\r\n\r\n      // Code executed before updating file\r\n      collection.before.update(function (userId, file, fields, modifiers) {\r\n        if (!self.permissions.checkUpdate(userId, file, fields, modifiers)) {\r\n          throw new Meteor.Error('forbidden', 'Forbidden');\r\n        }\r\n      });\r\n\r\n      // Code executed before removing file\r\n      collection.before.remove(function (userId, file) {\r\n        if (!self.permissions.checkRemove(userId, file)) {\r\n          throw new Meteor.Error('forbidden', 'Forbidden');\r\n        }\r\n\r\n        // Delete the physical file in the store\r\n        self.delete(file._id);\r\n\r\n        let tmpFile = UploadFS.getTempFilePath(file._id);\r\n\r\n        // Delete the temp file\r\n        fs.stat(tmpFile, function (err) {\r\n          !err && fs.unlink(tmpFile, function (err) {\r\n            err && console.error(`ufs: cannot delete temp file at ${tmpFile} (${err.message})`);\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deletes a file async\r\n   * @param fileId\r\n   * @param callback\r\n   */\r\n  delete(fileId, callback) {\r\n    throw new Error('delete is not implemented');\r\n  }\r\n\r\n  /**\r\n   * Generates a random token\r\n   * @param pattern\r\n   * @return {string}\r\n   */\r\n  generateToken(pattern) {\r\n    return (pattern || 'xyxyxyxyxy').replace(/[xy]/g, (c) => {\r\n      let r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n      let s = v.toString(16);\r\n      return Math.round(Math.random()) ? s.toUpperCase() : s;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns the collection\r\n   * @return {Mongo.Collection}\r\n   */\r\n  getCollection() {\r\n    return this.options.collection;\r\n  }\r\n\r\n  /**\r\n   * Returns the file URL\r\n   * @param fileId\r\n   * @return {string|null}\r\n   */\r\n  getFileRelativeURL(fileId) {\r\n    let file = this.getCollection().findOne(fileId, { fields: { name: 1 } });\r\n    return file ? this.getRelativeURL(`${fileId}/${file.name}`) : null;\r\n  }\r\n\r\n  /**\r\n   * Returns the file URL\r\n   * @param fileId\r\n   * @return {string|null}\r\n   */\r\n  getFileURL(fileId) {\r\n    let file = this.getCollection().findOne(fileId, { fields: { name: 1 } });\r\n    return file ? this.getURL(`${fileId}/${file.name}`) : null;\r\n  }\r\n\r\n  /**\r\n   * Returns the file filter\r\n   * @return {UploadFS.Filter}\r\n   */\r\n  getFilter() {\r\n    return this.options.filter;\r\n  }\r\n\r\n  /**\r\n   * Returns the store name\r\n   * @return {string}\r\n   */\r\n  getName() {\r\n    return this.options.name;\r\n  }\r\n\r\n  /**\r\n   * Returns the file read stream\r\n   * @param fileId\r\n   * @param file\r\n   */\r\n  getReadStream(fileId, file) {\r\n    throw new Error('Store.getReadStream is not implemented');\r\n  }\r\n\r\n  /**\r\n   * Returns the store relative URL\r\n   * @param path\r\n   * @return {string}\r\n   */\r\n  getRelativeURL(path) {\r\n    const rootUrl = Meteor.absoluteUrl().replace(/\\/+$/, '');\r\n    const rootPath = rootUrl.replace(/^[a-z]+:\\/\\/[^/]+\\/*/gi, '');\r\n    const storeName = this.getName();\r\n    path = String(path).replace(/\\/$/, '').trim();\r\n    return encodeURI(`${rootPath}/${UploadFS.config.storesPath}/${storeName}/${path}`);\r\n  }\r\n\r\n  /**\r\n   * Returns the store absolute URL\r\n   * @param path\r\n   * @return {string}\r\n   */\r\n  getURL(path) {\r\n    const rootUrl = Meteor.absoluteUrl({ secure: UploadFS.config.https }).replace(/\\/+$/, '');\r\n    const storeName = this.getName();\r\n    path = String(path).replace(/\\/$/, '').trim();\r\n    return encodeURI(`${rootUrl}/${UploadFS.config.storesPath}/${storeName}/${path}`);\r\n  }\r\n\r\n  /**\r\n   * Returns the file write stream\r\n   * @param fileId\r\n   * @param file\r\n   */\r\n  getWriteStream(fileId, file) {\r\n    throw new Error('getWriteStream is not implemented');\r\n  }\r\n\r\n  /**\r\n   * Completes the file upload\r\n   * @param url\r\n   * @param file\r\n   * @param callback\r\n   */\r\n  importFromURL(url, file, callback) {\r\n    Meteor.call('ufsImportURL', url, file, this.getName(), callback);\r\n  }\r\n\r\n  /**\r\n   * Called when a copy error happened\r\n   * @param err\r\n   * @param fileId\r\n   * @param file\r\n   */\r\n  onCopyError(err, fileId, file) {\r\n    console.error(`ufs: cannot copy file \"${fileId}\" (${err.message})`, err);\r\n  }\r\n\r\n  /**\r\n   * Called when a file has been uploaded\r\n   * @param file\r\n   */\r\n  onFinishUpload(file) {\r\n  }\r\n\r\n  /**\r\n   * Called when a file is read from the store\r\n   * @param fileId\r\n   * @param file\r\n   * @param request\r\n   * @param response\r\n   * @return boolean\r\n   */\r\n  onRead(fileId, file, request, response) {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Called when a read error happened\r\n   * @param err\r\n   * @param fileId\r\n   * @param file\r\n   * @return boolean\r\n   */\r\n  onReadError(err, fileId, file) {\r\n    console.error(`ufs: cannot read file \"${fileId}\" (${err.message})`, err);\r\n  }\r\n\r\n  /**\r\n   * Called when file is being validated\r\n   * @param file\r\n   */\r\n  onValidate(file) {\r\n  }\r\n\r\n  /**\r\n   * Called when a write error happened\r\n   * @param err\r\n   * @param fileId\r\n   * @param file\r\n   * @return boolean\r\n   */\r\n  onWriteError(err, fileId, file) {\r\n    console.error(`ufs: cannot write file \"${fileId}\" (${err.message})`, err);\r\n  }\r\n\r\n  /**\r\n   * Sets the store permissions\r\n   * @param permissions\r\n   */\r\n  setPermissions(permissions) {\r\n    if (!(permissions instanceof StorePermissions)) {\r\n      throw new TypeError('Permissions is not an instance of UploadFS.StorePermissions');\r\n    }\r\n    this.permissions = permissions;\r\n  }\r\n\r\n  /**\r\n   * Transforms the file on reading\r\n   * @param readStream\r\n   * @param writeStream\r\n   * @param fileId\r\n   * @param file\r\n   * @param request\r\n   * @param headers\r\n   */\r\n  transformRead(readStream, writeStream, fileId, file, request, headers) {\r\n    if (typeof this.options.transformRead === 'function') {\r\n      this.options.transformRead.call(this, readStream, writeStream, fileId, file, request, headers);\r\n    } else {\r\n      readStream.pipe(writeStream);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transforms the file on writing\r\n   * @param readStream\r\n   * @param writeStream\r\n   * @param fileId\r\n   * @param file\r\n   */\r\n  transformWrite(readStream, writeStream, fileId, file) {\r\n    if (typeof this.options.transformWrite === 'function') {\r\n      this.options.transformWrite.call(this, readStream, writeStream, fileId, file);\r\n    } else {\r\n      readStream.pipe(writeStream);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validates the file\r\n   * @param file\r\n   */\r\n  validate(file) {\r\n    if (typeof this.onValidate === 'function') {\r\n      this.onValidate(file);\r\n    }\r\n  }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport { Mongo } from 'meteor/mongo';\r\n\r\n/**\r\n * Collection of upload tokens\r\n * @type {Mongo.Collection}\r\n */\r\nexport const Tokens = new Mongo.Collection('ufsTokens');\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport { Meteor } from 'meteor/meteor';\r\nimport { _ } from 'meteor/underscore';\r\nimport { Store } from './ufs-store';\r\n\r\n/**\r\n * File uploader\r\n */\r\nexport class Uploader {\r\n\r\n  constructor(options) {\r\n    let self = this;\r\n\r\n    // Set default options\r\n    options = _.extend({\r\n      adaptive: true,\r\n      capacity: 0.9,\r\n      chunkSize: 16 * 1024,\r\n      data: null,\r\n      file: null,\r\n      maxChunkSize: 4 * 1024 * 1000,\r\n      maxTries: 5,\r\n      onAbort: this.onAbort,\r\n      onComplete: this.onComplete,\r\n      onCreate: this.onCreate,\r\n      onError: this.onError,\r\n      onProgress: this.onProgress,\r\n      onStart: this.onStart,\r\n      onStop: this.onStop,\r\n      retryDelay: 2000,\r\n      store: null,\r\n      transferDelay: 100,\r\n    }, options);\r\n\r\n    // Check options\r\n    if (typeof options.adaptive !== 'boolean') {\r\n      throw new TypeError('adaptive is not a number');\r\n    }\r\n    if (typeof options.capacity !== 'number') {\r\n      throw new TypeError('capacity is not a number');\r\n    }\r\n    if (options.capacity <= 0 || options.capacity > 1) {\r\n      throw new RangeError('capacity must be a float between 0.1 and 1.0');\r\n    }\r\n    if (typeof options.chunkSize !== 'number') {\r\n      throw new TypeError('chunkSize is not a number');\r\n    }\r\n    if (!(options.data instanceof Blob) && !(options.data instanceof File)) {\r\n      throw new TypeError('data is not an Blob or File');\r\n    }\r\n    if (options.file === null || typeof options.file !== 'object') {\r\n      throw new TypeError('file is not an object');\r\n    }\r\n    if (typeof options.maxChunkSize !== 'number') {\r\n      throw new TypeError('maxChunkSize is not a number');\r\n    }\r\n    if (typeof options.maxTries !== 'number') {\r\n      throw new TypeError('maxTries is not a number');\r\n    }\r\n    if (typeof options.retryDelay !== 'number') {\r\n      throw new TypeError('retryDelay is not a number');\r\n    }\r\n    if (typeof options.transferDelay !== 'number') {\r\n      throw new TypeError('transferDelay is not a number');\r\n    }\r\n    if (typeof options.onAbort !== 'function') {\r\n      throw new TypeError('onAbort is not a function');\r\n    }\r\n    if (typeof options.onComplete !== 'function') {\r\n      throw new TypeError('onComplete is not a function');\r\n    }\r\n    if (typeof options.onCreate !== 'function') {\r\n      throw new TypeError('onCreate is not a function');\r\n    }\r\n    if (typeof options.onError !== 'function') {\r\n      throw new TypeError('onError is not a function');\r\n    }\r\n    if (typeof options.onProgress !== 'function') {\r\n      throw new TypeError('onProgress is not a function');\r\n    }\r\n    if (typeof options.onStart !== 'function') {\r\n      throw new TypeError('onStart is not a function');\r\n    }\r\n    if (typeof options.onStop !== 'function') {\r\n      throw new TypeError('onStop is not a function');\r\n    }\r\n    if (typeof options.store !== 'string' && !(options.store instanceof Store)) {\r\n      throw new TypeError('store must be the name of the store or an instance of UploadFS.Store');\r\n    }\r\n\r\n    // Public attributes\r\n    self.adaptive = options.adaptive;\r\n    self.capacity = parseFloat(options.capacity);\r\n    self.chunkSize = parseInt(options.chunkSize);\r\n    self.maxChunkSize = parseInt(options.maxChunkSize);\r\n    self.maxTries = parseInt(options.maxTries);\r\n    self.retryDelay = parseInt(options.retryDelay);\r\n    self.transferDelay = parseInt(options.transferDelay);\r\n    self.onAbort = options.onAbort;\r\n    self.onComplete = options.onComplete;\r\n    self.onCreate = options.onCreate;\r\n    self.onError = options.onError;\r\n    self.onProgress = options.onProgress;\r\n    self.onStart = options.onStart;\r\n    self.onStop = options.onStop;\r\n\r\n    // Private attributes\r\n    let store = options.store;\r\n    let data = options.data;\r\n    let capacityMargin = 0.1;\r\n    let file = options.file;\r\n    let fileId = null;\r\n    let offset = 0;\r\n    let loaded = 0;\r\n    let total = data.size;\r\n    let tries = 0;\r\n    let postUrl = null;\r\n    let token = null;\r\n    let complete = false;\r\n    let uploading = false;\r\n\r\n    let timeA = null;\r\n    let timeB = null;\r\n\r\n    let elapsedTime = 0;\r\n    let startTime = 0;\r\n\r\n    // Keep only the name of the store\r\n    if (store instanceof Store) {\r\n      store = store.getName();\r\n    }\r\n\r\n    // Assign file to store\r\n    file.store = store;\r\n\r\n    function finish() {\r\n      // Finish the upload by telling the store the upload is complete\r\n      Meteor.call('ufsComplete', fileId, store, token, function (err, uploadedFile) {\r\n        if (err) {\r\n          self.onError(err, file);\r\n          self.abort();\r\n        } else if (uploadedFile) {\r\n          uploading = false;\r\n          complete = true;\r\n          file = uploadedFile;\r\n          self.onComplete(uploadedFile);\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Aborts the current transfer\r\n     */\r\n    self.abort = function () {\r\n      // Remove the file from database\r\n      Meteor.call('ufsDelete', fileId, store, token, function (err, result) {\r\n        if (err) {\r\n          self.onError(err, file);\r\n        }\r\n      });\r\n\r\n      // Reset uploader status\r\n      uploading = false;\r\n      fileId = null;\r\n      offset = 0;\r\n      tries = 0;\r\n      loaded = 0;\r\n      complete = false;\r\n      startTime = null;\r\n      self.onAbort(file);\r\n    };\r\n\r\n    /**\r\n     * Returns the average speed in bytes per second\r\n     * @returns {number}\r\n     */\r\n    self.getAverageSpeed = function () {\r\n      let seconds = self.getElapsedTime() / 1000;\r\n      return self.getLoaded() / seconds;\r\n    };\r\n\r\n    /**\r\n     * Returns the elapsed time in milliseconds\r\n     * @returns {number}\r\n     */\r\n    self.getElapsedTime = function () {\r\n      if (startTime && self.isUploading()) {\r\n        return elapsedTime + (Date.now() - startTime);\r\n      }\r\n      return elapsedTime;\r\n    };\r\n\r\n    /**\r\n     * Returns the file\r\n     * @return {object}\r\n     */\r\n    self.getFile = function () {\r\n      return file;\r\n    };\r\n\r\n    /**\r\n     * Returns the loaded bytes\r\n     * @return {number}\r\n     */\r\n    self.getLoaded = function () {\r\n      return loaded;\r\n    };\r\n\r\n    /**\r\n     * Returns current progress\r\n     * @return {number}\r\n     */\r\n    self.getProgress = function () {\r\n      return Math.min((loaded / total) * 100 / 100, 1.0);\r\n    };\r\n\r\n    /**\r\n     * Returns the remaining time in milliseconds\r\n     * @returns {number}\r\n     */\r\n    self.getRemainingTime = function () {\r\n      let averageSpeed = self.getAverageSpeed();\r\n      let remainingBytes = total - self.getLoaded();\r\n      return averageSpeed && remainingBytes ? Math.max(remainingBytes / averageSpeed, 0) : 0;\r\n    };\r\n\r\n    /**\r\n     * Returns the upload speed in bytes per second\r\n     * @returns {number}\r\n     */\r\n    self.getSpeed = function () {\r\n      if (timeA && timeB && self.isUploading()) {\r\n        let seconds = (timeB - timeA) / 1000;\r\n        return self.chunkSize / seconds;\r\n      }\r\n      return 0;\r\n    };\r\n\r\n    /**\r\n     * Returns the total bytes\r\n     * @return {number}\r\n     */\r\n    self.getTotal = function () {\r\n      return total;\r\n    };\r\n\r\n    /**\r\n     * Checks if the transfer is complete\r\n     * @return {boolean}\r\n     */\r\n    self.isComplete = function () {\r\n      return complete;\r\n    };\r\n\r\n    /**\r\n     * Checks if the transfer is active\r\n     * @return {boolean}\r\n     */\r\n    self.isUploading = function () {\r\n      return uploading;\r\n    };\r\n\r\n    /**\r\n     * Reads a portion of file\r\n     * @param start\r\n     * @param length\r\n     * @param callback\r\n     * @returns {Blob}\r\n     */\r\n    self.readChunk = function (start, length, callback) {\r\n      if (typeof callback != 'function') {\r\n        throw new Error('readChunk is missing callback');\r\n      }\r\n      try {\r\n        let end;\r\n\r\n        // Calculate the chunk size\r\n        if (length && start + length > total) {\r\n          end = total;\r\n        } else {\r\n          end = start + length;\r\n        }\r\n        // Get chunk\r\n        let chunk = data.slice(start, end);\r\n        // Pass chunk to callback\r\n        callback.call(self, null, chunk);\r\n\r\n      } catch (err) {\r\n        console.error('read error', err);\r\n        // Retry to read chunk\r\n        Meteor.setTimeout(function () {\r\n          if (tries < self.maxTries) {\r\n            tries += 1;\r\n            self.readChunk(start, length, callback);\r\n          }\r\n        }, self.retryDelay);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Sends a file chunk to the store\r\n     */\r\n    self.sendChunk = function () {\r\n      if (!complete && startTime !== null) {\r\n        if (offset < total) {\r\n          let chunkSize = self.chunkSize;\r\n\r\n          // Use adaptive length\r\n          if (self.adaptive && timeA && timeB && timeB > timeA) {\r\n            let duration = (timeB - timeA) / 1000;\r\n            let max = self.capacity * (1 + capacityMargin);\r\n            let min = self.capacity * (1 - capacityMargin);\r\n\r\n            if (duration >= max) {\r\n              chunkSize = Math.abs(Math.round(chunkSize * (max - duration)));\r\n\r\n            } else if (duration < min) {\r\n              chunkSize = Math.round(chunkSize * (min / duration));\r\n            }\r\n            // Limit to max chunk size\r\n            if (self.maxChunkSize > 0 && chunkSize > self.maxChunkSize) {\r\n              chunkSize = self.maxChunkSize;\r\n            }\r\n          }\r\n\r\n          // Reduce chunk size to fit total\r\n          if (offset + chunkSize > total) {\r\n            chunkSize = total - offset;\r\n          }\r\n\r\n          // Prepare the chunk\r\n          self.readChunk(offset, chunkSize, function (err, chunk) {\r\n            if (err) {\r\n              self.onError(err, file);\r\n              return;\r\n            }\r\n\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n              if (xhr.readyState === 4) {\r\n                if ([200, 201, 202, 204].includes(xhr.status)) {\r\n                  timeB = Date.now();\r\n                  offset += chunkSize;\r\n                  loaded += chunkSize;\r\n\r\n                  // Send next chunk\r\n                  self.onProgress(file, self.getProgress());\r\n\r\n                  // Finish upload\r\n                  if (loaded >= total) {\r\n                    elapsedTime = Date.now() - startTime;\r\n                    finish();\r\n                  } else {\r\n                    Meteor.setTimeout(self.sendChunk, self.transferDelay);\r\n                  }\r\n                } else if (![402, 403, 404, 500].includes(xhr.status)) {\r\n                  // Retry until max tries is reach\r\n                  // But don't retry if these errors occur\r\n                  if (tries <= self.maxTries) {\r\n                    tries += 1;\r\n                    // Wait before retrying\r\n                    Meteor.setTimeout(self.sendChunk, self.retryDelay);\r\n                  } else {\r\n                    self.abort();\r\n                  }\r\n                } else {\r\n                  self.abort();\r\n                }\r\n              }\r\n            };\r\n\r\n            // Calculate upload progress\r\n            let progress = (offset + chunkSize) / total;\r\n            // let formData = new FormData();\r\n            // formData.append('progress', progress);\r\n            // formData.append('chunk', chunk);\r\n            let url = `${postUrl}&progress=${progress}`;\r\n\r\n            timeA = Date.now();\r\n            timeB = null;\r\n            uploading = true;\r\n\r\n            // Send chunk to the store\r\n            xhr.open('POST', url, true);\r\n            xhr.send(chunk);\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Starts or resumes the transfer\r\n     */\r\n    self.start = function () {\r\n      if (!fileId) {\r\n        // Create the file document and get the token\r\n        // that allows the user to send chunks to the store.\r\n        Meteor.call('ufsCreate', _.extend({}, file), function (err, result) {\r\n          if (err) {\r\n            self.onError(err, file);\r\n          } else if (result) {\r\n            token = result.token;\r\n            postUrl = result.url;\r\n            fileId = result.fileId;\r\n            file._id = result.fileId;\r\n            self.onCreate(file);\r\n            tries = 0;\r\n            startTime = Date.now();\r\n            self.onStart(file);\r\n            self.sendChunk();\r\n          }\r\n        });\r\n      } else if (!uploading && !complete) {\r\n        // Resume uploading\r\n        tries = 0;\r\n        startTime = Date.now();\r\n        self.onStart(file);\r\n        self.sendChunk();\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Stops the transfer\r\n     */\r\n    self.stop = function () {\r\n      if (uploading) {\r\n        // Update elapsed time\r\n        elapsedTime = Date.now() - startTime;\r\n        startTime = null;\r\n        uploading = false;\r\n        self.onStop(file);\r\n\r\n        Meteor.call('ufsStop', fileId, store, token, function (err, result) {\r\n          if (err) {\r\n            self.onError(err, file);\r\n          }\r\n        });\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Called when the file upload is aborted\r\n   * @param file\r\n   */\r\n  onAbort(file) {\r\n  }\r\n\r\n  /**\r\n   * Called when the file upload is complete\r\n   * @param file\r\n   */\r\n  onComplete(file) {\r\n  }\r\n\r\n  /**\r\n   * Called when the file is created in the collection\r\n   * @param file\r\n   */\r\n  onCreate(file) {\r\n  }\r\n\r\n  /**\r\n   * Called when an error occurs during file upload\r\n   * @param err\r\n   * @param file\r\n   */\r\n  onError(err, file) {\r\n    console.error(`ufs: ${err.message}`);\r\n  }\r\n\r\n  /**\r\n   * Called when a file chunk has been sent\r\n   * @param file\r\n   * @param progress is a float from 0.0 to 1.0\r\n   */\r\n  onProgress(file, progress) {\r\n  }\r\n\r\n  /**\r\n   * Called when the file upload starts\r\n   * @param file\r\n   */\r\n  onStart(file) {\r\n  }\r\n\r\n  /**\r\n   * Called when the file upload stops\r\n   * @param file\r\n   */\r\n  onStop(file) {\r\n  }\r\n}\r\n"]}