{"version":3,"sources":["meteor://ðŸ’»app/packages/konecty:user-presence/common/common.js","meteor://ðŸ’»app/packages/konecty:user-presence/server/server.js","meteor://ðŸ’»app/packages/konecty:user-presence/server/monitor.js"],"names":["UsersSessions","Meteor","Collection","module","link","_ensureIndex","sparse","name","allowedStatus","logEnable","process","env","ENABLE_PRESENCE_LOGS","log","msg","color","console","logRed","Array","prototype","slice","call","arguments","join","logGrey","logGreen","logYellow","checkUser","id","userId","user","users","findOne","fields","_id","Error","UserPresence","activeLogs","removeConnectionsByInstanceId","instanceId","update","$pull","connections","multi","removeAllConnections","remove","getConnectionHandle","connectionId","internalConnection","server","sessions","get","connectionHandle","createConnection","connection","status","metadata","closed","UserPresenceUserId","query","now","Date","undefined","Package","InstanceStatus","$push","_createdAt","_updatedAt","$set","upsert","setConnection","count","statusDefault","$ne","setDefaultStatus","indexOf","UserPresenceMonitor","processUser","removeConnection","start","onConnection","session","onClose","on","bindEnvironment","Accounts","onLogin","login","onLogout","publish","ready","UserPresenceEvents","statusConnection","$or","result","emit","methods","check","Match","Maybe","String","Object","unblock","length","EventEmitter","Npm","require","monitorUsersSessions","find","observe","added","record","processUserSession","changed","removed","monitorDeletedServers","getCollection","observeChanges","removeLostConnections","ids","fetch","map","$nin","onSetUserStatus","callback","action","setStatus","$exists","connectionStatus","forEach","userSession"],"mappings":"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","file":"/packages/konecty_user-presence.js","sourcesContent":["/* globals UsersSessions */\n/* exported UsersSessions */\n\nUsersSessions = new Meteor.Collection('usersSessions');\n","/* globals InstanceStatus, UsersSessions, UserPresenceMonitor, UserPresence */\nimport 'colors';\n\nUsersSessions._ensureIndex({'connections.instanceId': 1}, {sparse: 1, name: 'connections.instanceId'});\nUsersSessions._ensureIndex({'connections.id': 1}, {sparse: 1, name: 'connections.id'});\n\nvar allowedStatus = ['online', 'away', 'busy', 'offline'];\n\nvar logEnable = process.env.ENABLE_PRESENCE_LOGS === 'true';\n\nvar log = function(msg, color) {\n\tif (logEnable) {\n\t\tif (color) {\n\t\t\tconsole.log(msg[color]);\n\t\t} else {\n\t\t\tconsole.log(msg);\n\t\t}\n\t}\n};\n\nvar logRed = function() {\n\tlog(Array.prototype.slice.call(arguments).join(' '), 'red');\n};\nvar logGrey = function() {\n\tlog(Array.prototype.slice.call(arguments).join(' '), 'grey');\n};\nvar logGreen = function() {\n\tlog(Array.prototype.slice.call(arguments).join(' '), 'green');\n};\nvar logYellow = function() {\n\tlog(Array.prototype.slice.call(arguments).join(' '), 'yellow');\n};\n\nvar checkUser = function(id, userId) {\n\tif (!id || !userId || id === userId) {\n\t\treturn true;\n\t}\n\tvar user = Meteor.users.findOne(id, { fields: { _id: 1 } });\n\tif (user) {\n\t\tthrow new Meteor.Error('cannot-change-other-users-status');\n\t}\n\n\treturn true;\n}\n\nUserPresence = {\n\tactiveLogs: function() {\n\t\tlogEnable = true;\n\t},\n\n\tremoveConnectionsByInstanceId: function(instanceId) {\n\t\tlogRed('[user-presence] removeConnectionsByInstanceId', instanceId);\n\t\tvar update = {\n\t\t\t$pull: {\n\t\t\t\tconnections: {\n\t\t\t\t\tinstanceId: instanceId\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tUsersSessions.update({}, update, {multi: true});\n\t},\n\n\tremoveAllConnections: function() {\n\t\tlogRed('[user-presence] removeAllConnections');\n\t\tUsersSessions.remove({});\n\t},\n\n\tgetConnectionHandle(connectionId) {\n\t\tconst internalConnection = Meteor.server.sessions.get(connectionId);\n\n\t\tif (!internalConnection) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn internalConnection.connectionHandle;\n\t},\n\n\tcreateConnection: function(userId, connection, status, metadata) {\n\t\t// if connections is invalid, does not have an userId or is already closed, don't save it on db\n\t\tif (!userId || !connection.id) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst connectionHandle = UserPresence.getConnectionHandle(connection.id);\n\n\t\tif (!connectionHandle || connectionHandle.closed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconnectionHandle.UserPresenceUserId = userId;\n\n\t\tstatus = status || 'online';\n\n\t\tlogGreen('[user-presence] createConnection', userId, connection.id, status, metadata);\n\n\t\tvar query = {\n\t\t\t_id: userId\n\t\t};\n\n\t\tvar now = new Date();\n\n\t\tvar instanceId = undefined;\n\t\tif (Package['konecty:multiple-instances-status']) {\n\t\t\tinstanceId = InstanceStatus.id();\n\t\t}\n\n\t\tvar update = {\n\t\t\t$push: {\n\t\t\t\tconnections: {\n\t\t\t\t\tid: connection.id,\n\t\t\t\t\tinstanceId: instanceId,\n\t\t\t\t\tstatus: status,\n\t\t\t\t\t_createdAt: now,\n\t\t\t\t\t_updatedAt: now\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (metadata) {\n\t\t\tupdate.$set = {\n\t\t\t\tmetadata: metadata\n\t\t\t};\n\t\t\tconnection.metadata = metadata;\n\t\t}\n\n\t\t// make sure closed connections are being created\n\t\tif (!connectionHandle.closed) {\n\t\t\tUsersSessions.upsert(query, update);\n\t\t}\n\t},\n\n\tsetConnection: function(userId, connection, status) {\n\t\tif (!userId) {\n\t\t\treturn;\n\t\t}\n\n\t\tlogGrey('[user-presence] setConnection', userId, connection.id, status);\n\n\t\tvar query = {\n\t\t\t_id: userId,\n\t\t\t'connections.id': connection.id\n\t\t};\n\n\t\tvar now = new Date();\n\n\t\tvar update = {\n\t\t\t$set: {\n\t\t\t\t'connections.$.status': status,\n\t\t\t\t'connections.$._updatedAt': now\n\t\t\t}\n\t\t};\n\n\t\tif (connection.metadata) {\n\t\t\tupdate.$set.metadata = connection.metadata;\n\t\t}\n\n\t\tvar count = UsersSessions.update(query, update);\n\n\t\tif (count === 0) {\n\t\t\treturn UserPresence.createConnection(userId, connection, status, connection.metadata);\n\t\t}\n\n\t\tif (status === 'online') {\n\t\t\tMeteor.users.update({_id: userId, statusDefault: 'online', status: {$ne: 'online'}}, {$set: {status: 'online'}});\n\t\t} else if (status === 'away') {\n\t\t\tMeteor.users.update({_id: userId, statusDefault: 'online', status: {$ne: 'away'}}, {$set: {status: 'away'}});\n\t\t}\n\t},\n\n\tsetDefaultStatus: function(userId, status) {\n\t\tif (!userId) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (allowedStatus.indexOf(status) === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tlogYellow('[user-presence] setDefaultStatus', userId, status);\n\n\t\tvar update = Meteor.users.update({_id: userId, statusDefault: {$ne: status}}, {$set: {statusDefault: status}});\n\n\t\tif (update > 0) {\n\t\t\tUserPresenceMonitor.processUser(userId, { statusDefault: status });\n\t\t}\n\t},\n\n\tremoveConnection: function(connectionId) {\n\t\tlogRed('[user-presence] removeConnection', connectionId);\n\n\t\tvar query = {\n\t\t\t'connections.id': connectionId\n\t\t};\n\n\t\tvar update = {\n\t\t\t$pull: {\n\t\t\t\tconnections: {\n\t\t\t\t\tid: connectionId\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn UsersSessions.update(query, update);\n\t},\n\n\tstart: function() {\n\t\tMeteor.onConnection(function(connection) {\n\t\t\tconst session = Meteor.server.sessions.get(connection.id);\n\n\t\t\tconnection.onClose(function() {\n\t\t\t\tif (!session) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst connectionHandle = session.connectionHandle;\n\n\t\t\t\t// mark connection as closed so if it drops in the middle of the process it doesn't even is created\n\t\t\t\tif (!connectionHandle) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconnectionHandle.closed = true;\n\n\t\t\t\tif (connectionHandle.UserPresenceUserId != null) {\n\t\t\t\t\tUserPresence.removeConnection(connection.id);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tprocess.on('exit', Meteor.bindEnvironment(function() {\n\t\t\tif (Package['konecty:multiple-instances-status']) {\n\t\t\t\tUserPresence.removeConnectionsByInstanceId(InstanceStatus.id());\n\t\t\t} else {\n\t\t\t\tUserPresence.removeAllConnections();\n\t\t\t}\n\t\t}));\n\n\t\tif (Package['accounts-base']) {\n\t\t\tAccounts.onLogin(function(login) {\n\t\t\t\tUserPresence.createConnection(login.user._id, login.connection);\n\t\t\t});\n\n\t\t\tAccounts.onLogout(function(login) {\n\t\t\t\tUserPresence.removeConnection(login.connection.id);\n\t\t\t});\n\t\t}\n\n\t\tMeteor.publish(null, function() {\n\t\t\tif (this.userId == null && this.connection && this.connection.id) {\n\t\t\t\tconst connectionHandle = UserPresence.getConnectionHandle(this.connection.id);\n\t\t\t\tif (connectionHandle && connectionHandle.UserPresenceUserId != null) {\n\t\t\t\t\tUserPresence.removeConnection(this.connection.id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.ready();\n\t\t});\n\n\t\tUserPresenceEvents.on('setStatus', function(userId, status) {\n\t\t\tvar user = Meteor.users.findOne(userId);\n\t\t\tvar statusConnection = status;\n\n\t\t\tif (!user) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (user.statusDefault != null && status !== 'offline' && user.statusDefault !== 'online') {\n\t\t\t\tstatus = user.statusDefault;\n\t\t\t}\n\n\t\t\tvar query = {\n\t\t\t\t_id: userId,\n\t\t\t\t$or: [\n\t\t\t\t\t{status: {$ne: status}},\n\t\t\t\t\t{statusConnection: {$ne: statusConnection}}\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tvar update = {\n\t\t\t\t$set: {\n\t\t\t\t\tstatus: status,\n\t\t\t\t\tstatusConnection: statusConnection\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst result = Meteor.users.update(query, update);\n\n\t\t\t// if nothing updated, do not emit anything\n\t\t\tif (result) {\n\t\t\t\tUserPresenceEvents.emit('setUserStatus', user, status, statusConnection);\n\t\t\t}\n\t\t});\n\n\t\tMeteor.methods({\n\t\t\t'UserPresence:connect': function(id, metadata) {\n\t\t\t\tcheck(id, Match.Maybe(String));\n\t\t\t\tcheck(metadata, Match.Maybe(Object));\n\t\t\t\tthis.unblock();\n\t\t\t\tcheckUser(id, this.userId);\n\t\t\t\tUserPresence.createConnection(id || this.userId, this.connection, 'online', metadata);\n\t\t\t},\n\n\t\t\t'UserPresence:away': function(id) {\n\t\t\t\tcheck(id, Match.Maybe(String));\n\t\t\t\tthis.unblock();\n\t\t\t\tcheckUser(id, this.userId);\n\t\t\t\tUserPresence.setConnection(id || this.userId, this.connection, 'away');\n\t\t\t},\n\n\t\t\t'UserPresence:online': function(id) {\n\t\t\t\tcheck(id, Match.Maybe(String));\n\t\t\t\tthis.unblock();\n\t\t\t\tcheckUser(id, this.userId);\n\t\t\t\tUserPresence.setConnection(id || this.userId, this.connection, 'online');\n\t\t\t},\n\n\t\t\t'UserPresence:setDefaultStatus': function(id, status) {\n\t\t\t\tcheck(id, Match.Maybe(String));\n\t\t\t\tcheck(status, Match.Maybe(String));\n\t\t\t\tthis.unblock();\n\n\t\t\t\t// backward compatible (receives status as first argument)\n\t\t\t\tif (arguments.length === 1) {\n\t\t\t\t\tUserPresence.setDefaultStatus(this.userId, id);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcheckUser(id, this.userId);\n\t\t\t\tUserPresence.setDefaultStatus(id || this.userId, status);\n\t\t\t}\n\t\t});\n\t}\n};\n","/* globals UserPresenceMonitor, UsersSessions, InstanceStatus */\nvar EventEmitter = Npm.require('events');\n\nUserPresenceEvents = new EventEmitter();\n\nfunction monitorUsersSessions() {\n\tUsersSessions.find({}).observe({\n\t\tadded: function(record) {\n\t\t\tUserPresenceMonitor.processUserSession(record, 'added');\n\t\t},\n\t\tchanged: function(record) {\n\t\t\tUserPresenceMonitor.processUserSession(record, 'changed');\n\t\t},\n\t\tremoved: function(record) {\n\t\t\tUserPresenceMonitor.processUserSession(record, 'removed');\n\t\t}\n\t});\n}\n\nfunction monitorDeletedServers() {\n\tInstanceStatus.getCollection().find({}, {fields: {_id: 1}}).observeChanges({\n\t\tremoved: function(id) {\n\t\t\tUserPresence.removeConnectionsByInstanceId(id);\n\t\t}\n\t});\n}\n\nfunction removeLostConnections() {\n\tif (!Package['konecty:multiple-instances-status']) {\n\t\treturn UsersSessions.remove({});\n\t}\n\n\tvar ids = InstanceStatus.getCollection().find({}, {fields: {_id: 1}}).fetch().map(function(id) {\n\t\treturn id._id;\n\t});\n\n\tvar update = {\n\t\t$pull: {\n\t\t\tconnections: {\n\t\t\t\tinstanceId: {\n\t\t\t\t\t$nin: ids\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tUsersSessions.update({}, update, {multi: true});\n}\n\nUserPresenceMonitor = {\n\t/**\n\t * The callback will receive the following parameters: user, status, statusConnection\n\t */\n\tonSetUserStatus: function(callback) {\n\t\tUserPresenceEvents.on('setUserStatus', callback);\n\t},\n\n\t// following actions/observers will run only when presence monitor turned on\n\tstart: function() {\n\t\tmonitorUsersSessions();\n\t\tremoveLostConnections();\n\n\t\tif (Package['konecty:multiple-instances-status']) {\n\t\t\tmonitorDeletedServers();\n\t\t}\n\t},\n\n\tprocessUserSession: function(record, action) {\n\t\tif (action === 'removed' && (record.connections == null || record.connections.length === 0)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (record.connections == null || record.connections.length === 0 || action === 'removed') {\n\t\t\tUserPresenceMonitor.setStatus(record._id, 'offline', record.metadata);\n\n\t\t\tif (action !== 'removed') {\n\t\t\t\tUsersSessions.remove({_id: record._id, 'connections.0': {$exists: false} });\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tvar connectionStatus = 'offline';\n\t\trecord.connections.forEach(function(connection) {\n\t\t\tif (connection.status === 'online') {\n\t\t\t\tconnectionStatus = 'online';\n\t\t\t} else if (connection.status === 'away' && connectionStatus === 'offline') {\n\t\t\t\tconnectionStatus = 'away';\n\t\t\t}\n\t\t});\n\n\t\tUserPresenceMonitor.setStatus(record._id, connectionStatus, record.metadata);\n\t},\n\n\tprocessUser: function(id, fields) {\n\t\tif (fields.statusDefault == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar userSession = UsersSessions.findOne({_id: id});\n\n\t\tif (userSession) {\n\t\t\tUserPresenceMonitor.processUserSession(userSession, 'changed');\n\t\t}\n\t},\n\n\tsetStatus: function(id, status, metadata) {\n\t\tUserPresenceEvents.emit('setStatus', id, status, metadata);\n\t}\n};\n"]}