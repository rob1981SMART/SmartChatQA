{"version":3,"file":"index.js","sources":["../src/helpers.js","../src/useClassName.js","../src/useDebouncedCallback.js","../src/useDebouncedUpdates.js","../src/useExclusiveBooleanProps.js","../src/useMediaQuery.js","../src/useMergedRefs.js","../src/useMutableCallback.js","../src/useToggle.js","../src/useUniqueId.js"],"sourcesContent":["// @flow\n\nexport const fromCamelToKebabCase = (camelCaseString: string) =>\n  camelCaseString.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase();\n\nexport const debounce = (fn: (...Array<any>) => any, delay: number) => {\n  let timer;\n  let callback;\n\n  function f(...args: Array<any>) {\n    const context = this;\n    clearTimeout(timer);\n    callback = () => fn.apply(context, args);\n    timer = setTimeout(callback, delay);\n    return context;\n  }\n\n  f.flush = () => {\n    clearTimeout(timer);\n    callback();\n  };\n\n  f.cancel = () => clearTimeout(timer);\n\n  return f;\n};\n","// @flow\n\nimport { useMemo } from 'react';\n\nimport { fromCamelToKebabCase } from './helpers';\n\n/**\n * Hook to generate a BEM-compatible `className` value for a component.\n *\n * @param componentClassName - the style class which identifies the component\n * @param modifiers - the modifiers applied to the style class\n * @param classNames - the additional style classes appended to the `className`\n * @return a BEM-compatible `className` in the format\n *  `(<block>|<block>__<element>) [...(<block>--<modifier>|<block>__<element>--<modifier>)] [...classNames]`\n */\nexport const useClassName = (\n  componentClassName : string,\n  modifiers: Object = {},\n  ...classNames: Array<string>\n): string =>\n  useMemo(\n    () => [\n      componentClassName,\n      ...Object.entries(modifiers)\n        .filter(([, value]) => !!value)\n        .map(([key, value]) => (typeof value === 'boolean'\n          ? `${ componentClassName }--${ fromCamelToKebabCase(key) }`\n          : `${ componentClassName }--${ fromCamelToKebabCase(key) }-${ fromCamelToKebabCase(String(value)) }`)),\n      ...classNames,\n    ].filter(Boolean).join(' '),\n    [\n      componentClassName,\n      Object.entries(modifiers).reduce((deps, [name, value]) => [...deps, name, value], []),\n      JSON.stringify(classNames),\n    ],\n  );\n","// @flow\n\nimport { useMemo } from 'react';\n\nimport { debounce } from './helpers';\n\n/**\n * Hook to memoize a debounced version of a callback.\n *\n * @param callback the callback to debounce\n * @param delay the number of milliseconds to delay\n * @param deps the hook dependencies\n * @return a memoized and debounced callback\n */\nexport const useDebouncedCallback = (\n  callback: (...Array<any>) => any,\n  delay: number,\n  deps?: Array<any>,\n): ((...Array<any>) => any) =>\n  useMemo(() => debounce(callback, delay), Array.isArray(deps) ? [delay, ...deps] : undefined);\n","// @flow\n\nimport { useReducer, useState } from 'react';\n\nimport { useDebouncedCallback } from './useDebouncedCallback';\n\n/**\n * Hook to debounce the state updater function returned by hooks like `useState()` and `useReducer()`.\n *\n * @param pair - the state and updater pair which will be debounced\n * @param pair.0 - the state value\n * @param pair.1 - the state updater function\n * @param delay - the number of milliseconds to delay the updater\n * @return a state value and debounced updater pair\n */\nexport const useDebouncedUpdates = (\n  [value, update]: [any, () => any],\n  delay: number,\n) => [value, useDebouncedCallback(update, delay, [])];\n\n/**\n * Hook to create a reduced state with a debounced `dispatch()` function.\n *\n * @param reducer - the reducer function\n * @param initializerArg - the initial state value or the argument passed to the initial state generator function\n * @param initializer - the initial state generator function\n * @param delay - the number of milliseconds to delay the updater\n * @return a state and debounced `dispatch()` function\n */\nexport const useDebouncedReducer = (\n  reducer: (any, any) => any,\n  initializerArg: any,\n  initializer: (any) => any,\n  delay: number,\n) =>\n  useDebouncedUpdates(useReducer(reducer, initializerArg, initializer), delay);\n\n/**\n * Hook to create a state with a debounced setter function.\n *\n * @param initialValue - the initial state value or the initial state generator function\n * @param delay - the number of milliseconds to delay the updater\n * @return a state and debounced setter function\n */\nexport const useDebouncedState = (\n  initialValue: any | () => any,\n  delay: number,\n) => useDebouncedUpdates(useState(initialValue), delay);\n","// @flow\n\nimport invariant from 'invariant';\n\n/**\n * Hook for asserting mutually exclusive boolean props. Useful for components that use boolean props\n * to choose styling variants.\n *\n * @param props - the mutually exclusive boolean props\n * @throws if two or more booleans props are set as true\n */\nexport const useExclusiveBooleanProps = (props: Object) =>\n  invariant(\n    Object.values(props).filter(Boolean).length <= 1,\n    `Only one property of [${ Object.keys(props).join(', ') }] should be true`,\n  );\n","// @flow\n\nimport { useLayoutEffect, useState } from 'react';\n\n/**\n * Hook to listen to a media query.\n *\n * @param [query] - the CSS3 media query expression\n * @return `true` if the media query matches; `false` is it does not match or the query is not defined\n */\nexport const useMediaQuery = (query: string): bool => {\n  const [matches, setMatches] = useState(() => {\n    if (!query) {\n      return false;\n    }\n\n    const { matches } = window.matchMedia(query);\n    return !!matches;\n  });\n\n  useLayoutEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    let mounted = true;\n    const mql = window.matchMedia(query);\n\n    const handleChange = () => {\n      if (!mounted) {\n        return;\n      }\n\n      setMatches(!!mql.matches);\n    };\n\n    mql.addListener(handleChange);\n    setMatches(mql.matches);\n\n    return () => {\n      mounted = false;\n      mql.removeListener(handleChange);\n    };\n  }, [query]);\n\n  return matches;\n};\n","// @flow\n\nimport { useCallback } from 'react';\nimport type { Ref } from 'react';\n\n/**\n * Hook to merge refs and callbacks refs into a single callback ref. Useful when your component need a internal ref\n * while receiving a forwared ref.\n *\n * @param refs - the refs and callback refs that should be merged\n * @return a merged callback ref\n */\nexport const useMergedRefs = (...refs: Array<Ref<any>>) => useCallback((refValue: any) => {\n  refs.filter(Boolean).forEach((ref) => {\n    if (typeof ref === 'function') {\n      ref(refValue);\n      return;\n    }\n\n    if (typeof ref === 'object') {\n      ref.current = refValue;\n    }\n  });\n}, refs);\n","// @flow\n\nimport { useCallback, useRef } from 'react';\n\n/**\n * Hook to create a stable callback from a mutable one.\n *\n * @param fn the mutable callback\n * @return a stable callback\n */\nexport const useMutableCallback = (fn: (...args : any[]) => any) => {\n  const fnRef = useRef(fn);\n  fnRef.current = fn;\n\n  return useCallback((...args: any[]) => fnRef.current && (0, fnRef.current)(...args), []);\n};\n","// @flow\n\nimport { useState } from 'react';\n\n/**\n * Hook to create a toggleable boolean state.\n *\n * @param initialValue - the initial value or the initial state generator function\n * @return a state boolean value and a state toggler function\n */\nexport const useToggle = (initialValue: any | () => any) => {\n  const [value, setValue] = useState(() => (typeof initialValue === 'function' ? !!initialValue() : !!initialValue));\n  return [value, (forcedValue: any | () => any) => setValue(typeof forcedValue !== 'undefined' ? forcedValue : !value)];\n};\n","// @flow\n\nimport { useMemo } from 'react';\n\nexport const useUniqueId = (): string =>\n  useMemo(() => Math.random().toString(36).slice(2), []);\n"],"names":["fromCamelToKebabCase","camelCaseString","replace","toLowerCase","debounce","fn","delay","timer","callback","f","args","context","clearTimeout","apply","setTimeout","flush","cancel","useClassName","componentClassName","modifiers","classNames","useMemo","Object","entries","filter","value","map","key","String","Boolean","join","reduce","deps","name","JSON","stringify","useDebouncedCallback","Array","isArray","undefined","useDebouncedUpdates","update","useDebouncedReducer","reducer","initializerArg","initializer","useReducer","useDebouncedState","initialValue","useState","useExclusiveBooleanProps","props","invariant","values","length","keys","useMediaQuery","query","window","matchMedia","matches","setMatches","useLayoutEffect","mounted","mql","handleChange","addListener","removeListener","useMergedRefs","refs","useCallback","refValue","forEach","ref","current","useMutableCallback","fnRef","useRef","useToggle","setValue","forcedValue","useUniqueId","Math","random","toString","slice"],"mappings":"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"}